<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ce54a110-60b4-4b2f-b783-675197c55daf" name="Default Changelist" comment="The brain-melty task of using the event system, from outside the event &#10;system, which is not really how I intended it when I made it, but how&#10;actions are clearly best handled, has been resolved.  Some minor changes&#10;resulted. &#10;&#10;Initial combat actions Dodge, and Assist are now ready to tie into &#10;Encounter.do_battle(), as is Attack which was the first one implemented.&#10;&#10;Work on implementing user interaction inside do_battle will now begin.&#10;&#10;The next step after terminal interaction to control battles, is creation&#10;of battles via terminal interaction, either as an auto fight vs creatures,&#10;an interactive fight vs creatures, or a duel vs other players.&#10;&#10;Following that will be tying terminal interactions, to the discord api.&#10;&#10;actions:&#10;- gave it the now standard trace.print debug init block&#10;- littered a few todo's&#10;- implemented CombatAssist&#10;- implemented CombatDodge&#10;- implemented a test block to verify functionality&#10;&#10;encounter:&#10;- do_battle no longer calls self.target_defence &#10;  or defence.get_armor_class()&#10;  - Now wrapped up inside of Encounter.attack_roll() method.&#10;- weapon damage is now set in two stages, giving defence events a chance&#10;  to edit the result before the critical multiplier is applied.&#10;&#10;events:&#10;- added another event category, battle_cleanup(), used to strip effects&#10;  which did not get a chance to remove themselves from characters&#10;&#10;functions:&#10;- kicked methods add_affector and remove_affector over to misc to resolve&#10;  a circular import issue.  They sort of belong in misc more anyways&#10;- all set.remove() calls replaced with set.discard(), remove throws an&#10;  exception if the item being removed is not found, discard does not.&#10; &#10;misc:&#10;- now has methods add_affector, and remove_affector, moved here from &#10;  functions">
      <change afterPath="$PROJECT_DIR$/dnd5e combat flow chart.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_creatures.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_creatures.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_encounter.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_encounter.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_entity.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_entity.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_enums.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_enums.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_events.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_events.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_functions.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_functions.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_interactions.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_interactions.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_misc.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_misc.py" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <splitter split-orientation="horizontal" split-proportion="0.4278607">
      <split-first>
        <splitter split-orientation="horizontal" split-proportion="0.2561375">
          <split-first>
            <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
              <file pinned="false" current-in-tab="false">
                <entry file="file://$PROJECT_DIR$/dnd5e_actions.py">
                  <provider selected="true" editor-type-id="text-editor">
                    <state relative-caret-position="52">
                      <caret line="4" column="32" lean-forward="true" selection-start-line="4" selection-start-column="32" selection-end-line="4" selection-end-column="32" />
                      <folding>
                        <element signature="e#105#113#0" expanded="true" />
                        <element signature="e#355#427#0" expanded="true" />
                        <element signature="e#453#538#0" expanded="true" />
                        <element signature="e#563#625#0" expanded="true" />
                        <element signature="e#965#1950#0" expanded="true" />
                        <element signature="e#1281#1378#0" expanded="true" />
                        <element signature="e#1537#1593#0" expanded="true" />
                        <element signature="e#2162#3275#0" expanded="true" />
                        <element signature="e#2431#2548#0" expanded="true" />
                        <element signature="e#2521#2692#0" expanded="true" />
                        <element signature="e#2745#2836#0" expanded="true" />
                        <element signature="e#2851#2855#0" expanded="true" />
                        <element signature="e#3106#3110#0" expanded="true" />
                        <element signature="e#3247#3251#0" expanded="true" />
                        <element signature="e#2929#3186#0" expanded="true" />
                      </folding>
                    </state>
                  </provider>
                </entry>
              </file>
              <file pinned="false" current-in-tab="false">
                <entry file="file://$PROJECT_DIR$/dnd5e_races.py">
                  <provider selected="true" editor-type-id="text-editor">
                    <state>
                      <folding>
                        <element signature="e#111#126#0" expanded="true" />
                        <element signature="e#160#468#0" expanded="true" />
                        <element signature="e#548#811#0" expanded="true" />
                        <element signature="e#4470#4521#0" expanded="true" />
                        <element signature="e#4938#4989#0" expanded="true" />
                        <element signature="e#5181#5233#0" expanded="true" />
                      </folding>
                    </state>
                  </provider>
                </entry>
              </file>
              <file pinned="false" current-in-tab="true">
                <entry file="file://$PROJECT_DIR$/dnd5e_interactions.py">
                  <provider selected="true" editor-type-id="text-editor">
                    <state relative-caret-position="117">
                      <caret line="9" column="27" lean-forward="true" selection-start-line="9" selection-start-column="27" selection-end-line="9" selection-end-column="27" />
                      <folding>
                        <element signature="e#0#39#0" expanded="true" />
                        <element signature="e#2242#2625#0" expanded="true" />
                        <element signature="e#2662#4028#0" expanded="true" />
                        <element signature="e#4046#9248#0" expanded="true" />
                        <element signature="e#9296#10017#0" expanded="true" />
                        <element signature="e#10012#10793#0" expanded="true" />
                        <element signature="e#10841#13254#0" expanded="true" />
                        <element signature="e#10988#11455#0" expanded="true" />
                        <element signature="e#11176#11350#0" expanded="true" />
                        <element signature="e#11492#12558#0" expanded="true" />
                        <element signature="e#11499#11611#0" expanded="true" />
                        <element signature="e#12604#13069#0" expanded="true" />
                        <element signature="e#13297#13567#0" expanded="true" />
                        <element signature="e#13602#13817#0" expanded="true" />
                        <element signature="e#13849#14034#0" expanded="true" />
                        <element signature="e#14328#16245#0" expanded="true" />
                      </folding>
                    </state>
                  </provider>
                </entry>
              </file>
              <file pinned="false" current-in-tab="false">
                <entry file="file://$PROJECT_DIR$/dnd5e_misc.py">
                  <provider selected="true" editor-type-id="text-editor">
                    <state relative-caret-position="147">
                      <caret line="178" lean-forward="true" selection-start-line="178" selection-end-line="178" />
                      <folding>
                        <element signature="e#4940#5817#0" expanded="true" />
                        <element signature="e#7025#7770#0" expanded="true" />
                        <element signature="e#7824#8620#0" expanded="true" />
                      </folding>
                    </state>
                  </provider>
                </entry>
              </file>
            </leaf>
          </split-first>
          <split-second>
            <leaf>
              <file pinned="false" current-in-tab="true">
                <entry file="file://$PROJECT_DIR$/dnd5e_functions.py">
                  <provider selected="true" editor-type-id="text-editor">
                    <state relative-caret-position="173">
                      <caret line="675" column="27" selection-start-line="675" selection-start-column="27" selection-end-line="675" selection-end-column="27" />
                      <folding>
                        <element signature="e#362#389#0" expanded="true" />
                        <element signature="e#3744#4039#0" expanded="true" />
                        <element signature="e#4636#5018#0" expanded="true" />
                        <element signature="e#5069#5116#0" expanded="true" />
                        <element signature="e#5170#5220#0" expanded="true" />
                        <element signature="e#9936#10038#0" expanded="true" />
                        <element signature="e#11006#11039#0" expanded="true" />
                        <element signature="e#11067#11174#0" expanded="true" />
                        <element signature="e#11288#11321#0" expanded="true" />
                        <element signature="e#11317#11423#0" expanded="true" />
                        <element signature="e#11566#11599#0" expanded="true" />
                        <element signature="e#11563#11665#0" expanded="true" />
                        <element signature="e#11837#11961#0" expanded="true" />
                        <element signature="e#12019#12444#0" expanded="true" />
                        <element signature="e#12352#12517#0" expanded="true" />
                        <element signature="e#12847#12935#0" expanded="true" />
                        <element signature="e#12686#12982#0" expanded="true" />
                        <element signature="e#13017#13079#0" expanded="true" />
                        <element signature="e#13131#13198#0" expanded="true" />
                        <element signature="e#13724#13820#0" expanded="true" />
                        <element signature="e#13251#13304#0" expanded="true" />
                        <element signature="e#13343#13473#0" expanded="true" />
                        <element signature="e#13527#13578#0" expanded="true" />
                        <element signature="e#12355#12388#0" expanded="true" />
                        <element signature="e#13419#13523#0" expanded="true" />
                        <element signature="e#12481#12514#0" expanded="true" />
                        <element signature="e#13701#13815#0" expanded="true" />
                        <element signature="e#15072#15198#0" expanded="true" />
                        <element signature="e#12602#12635#0" expanded="true" />
                        <element signature="e#13988#14092#0" expanded="true" />
                        <element signature="e#15511#15631#0" expanded="true" />
                        <element signature="e#13254#13287#0" expanded="true" />
                        <element signature="e#14740#14848#0" expanded="true" />
                        <element signature="e#16006#16136#0" expanded="true" />
                        <element signature="e#14892#16032#0" expanded="true" />
                        <element signature="e#10998#11060#0" expanded="true" />
                        <element signature="e#11722#13627#0" expanded="true" />
                        <element signature="e#15321#15383#0" expanded="true" />
                        <element signature="e#16610#17234#0" expanded="true" />
                        <element signature="e#18180#18365#0" expanded="true" />
                        <element signature="e#24050#24181#0" expanded="true" />
                        <element signature="e#20605#20928#0" expanded="true" />
                        <element signature="e#18958#19272#0" expanded="true" />
                        <element signature="e#19327#20088#0" expanded="true" />
                        <element signature="e#20195#20572#0" expanded="true" />
                        <element signature="e#24270#24401#0" expanded="true" />
                        <element signature="e#27352#27796#0" expanded="true" />
                        <element signature="e#24803#24931#0" expanded="true" />
                        <element signature="e#26105#26336#0" expanded="true" />
                        <element signature="e#21512#21614#0" expanded="true" />
                        <element signature="e#21667#21828#0" expanded="true" />
                        <element signature="e#24138#24396#0" expanded="true" />
                        <element signature="e#23310#23396#0" expanded="true" />
                        <element signature="e#30178#30288#0" expanded="true" />
                        <element signature="e#23524#23612#0" expanded="true" />
                        <element signature="e#23667#23935#0" expanded="true" />
                        <element signature="e#25159#26018#0" expanded="true" />
                        <element signature="e#26543#27262#0" expanded="true" />
                        <element signature="e#28228#28525#0" expanded="true" />
                        <element signature="e#29137#29412#0" expanded="true" />
                        <element signature="e#29807#30059#0" expanded="true" />
                        <element signature="e#31032#31316#0" expanded="true" />
                        <element signature="e#31228#31248#0" expanded="true" />
                        <element signature="e#30354#30423#0" expanded="true" />
                        <element signature="e#35819#35951#0" expanded="true" />
                      </folding>
                    </state>
                  </provider>
                </entry>
              </file>
            </leaf>
          </split-second>
        </splitter>
      </split-first>
      <split-second>
        <leaf>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/dnd5e_character_sheet.py">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="338">
                  <caret line="33" column="47" lean-forward="true" selection-start-line="33" selection-start-column="47" selection-end-line="33" selection-end-column="47" />
                  <folding>
                    <element signature="e#9136#10433#0" expanded="true" />
                  </folding>
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/dnd5e_creatures.py">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="91">
                  <caret line="7" column="36" lean-forward="true" selection-start-line="7" selection-start-column="36" selection-end-line="7" selection-end-column="36" />
                  <folding>
                    <element signature="e#0#27#0" expanded="true" />
                    <element signature="e#690#1668#0" expanded="true" />
                    <element signature="e#4886#7431#0" expanded="true" />
                    <element signature="e#5906#7360#0" expanded="true" />
                    <element signature="e#7515#9664#0" expanded="true" />
                    <element signature="e#7737#7847#0" expanded="true" />
                    <element signature="e#8518#9593#0" expanded="true" />
                    <element signature="e#8627#8981#0" expanded="true" />
                  </folding>
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/dnd5e_encounter.py">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="160">
                  <caret line="394" column="26" selection-start-line="394" selection-start-column="26" selection-end-line="394" selection-end-column="26" />
                  <folding>
                    <element signature="e#36#77#0" expanded="true" />
                    <element signature="e#398#489#0" expanded="true" />
                    <element signature="e#453#498#0" expanded="true" />
                    <element signature="e#577#627#0" expanded="true" />
                    <element signature="e#657#681#0" expanded="true" />
                    <element signature="e#783#827#0" expanded="true" />
                    <element signature="e#864#908#0" expanded="true" />
                    <element signature="e#941#1281#0" expanded="true" />
                    <element signature="e#1815#2260#0" expanded="true" />
                    <element signature="e#2625#8012#0" expanded="true" />
                    <element signature="e#8226#8550#0" expanded="true" />
                    <element signature="e#8375#9449#0" expanded="true" />
                    <element signature="e#10652#10968#0" expanded="true" />
                    <element signature="e#11046#13548#0" expanded="true" />
                  </folding>
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/dnd5e_events.py">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="185">
                  <caret line="96" column="65" selection-start-line="96" selection-start-column="65" selection-end-line="96" selection-end-column="65" />
                  <folding>
                    <element signature="e#0#9#0" expanded="true" />
                    <element signature="e#2365#3496#0" expanded="true" />
                  </folding>
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-second>
    </splitter>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>reckless b</find>
      <find>attack.set</find>
      <find>rolls w</find>
      <find>incapacitated e</find>
      <find>MOVE</find>
      <find>input()</find>
      <find>LU</find>
      <find>BACK</find>
      <find>affec</find>
      <find>ADVANTAGE</find>
      <find>defence</find>
      <find>remo</find>
      <find>.remove(</find>
      <find>TRAIT</find>
      <find>event.def</find>
      <find>STATU</find>
      <find>ADV</find>
      <find>SKILL</find>
      <find>self.affectors = []</find>
      <find>INVES</find>
      <find>misc</find>
      <find>functions</find>
      <find>functions.</find>
      <find>TraitN</find>
      <find>dnd5e_enums.</find>
      <find>Race</find>
      <find>RaceTraitBr</find>
      <find>dnd5e_</find>
      <find>DARKV</find>
      <find>is_actiopn</find>
    </findStrings>
    <replaceStrings>
      <replace>self.lvl = 1</replace>
      <replace>\t.\t</replace>
      <replace>TOOLS.</replace>
      <replace>functions.roll(</replace>
      <replace>functions.roll</replace>
      <replace>Functions.Die</replace>
      <replace>functions.</replace>
      <replace>.update({</replace>
      <replace>self.traits.update({</replace>
      <replace>{</replace>
      <replace>}</replace>
      <replace>set()</replace>
      <replace>update</replace>
      <replace>= {</replace>
      <replace>Deadly</replace>
      <replace>DRACONIC_</replace>
      <replace>def __init__(self, damage): super().__init__(damage)</replace>
      <replace>misc.ability_mod(</replace>
      <replace>def __init__(self, parent): pass</replace>
      <replace>: pass</replace>
      <replace>class</replace>
      <replace>(TraitsBase):</replace>
      <replace>function_ =</replace>
      <replace>.remove(</replace>
      <replace>(self, *args, **kwargs):</replace>
      <replace>], '\n\t', stack[</replace>
      <replace>.enum_type</replace>
      <replace>debug</replace>
      <replace>super().__init__()</replace>
      <replace>dnd5e_functions.</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Athandreyal &lt;darkprev@hotmail.com&gt;" />
        <option value="Athandreyal" />
      </list>
    </option>
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/dnd5e_status_effects.py" />
        <option value="$PROJECT_DIR$/dnd5e_weaponry" />
        <option value="$PROJECT_DIR$/armor.py" />
        <option value="$PROJECT_DIR$/dnd5e.py" />
        <option value="$PROJECT_DIR$/encounter.py" />
        <option value="$PROJECT_DIR$/dnd5e_character_classes.py" />
        <option value="$PROJECT_DIR$/dnd5e_Events.py" />
        <option value="$PROJECT_DIR$/dnd5e_items.py" />
        <option value="$PROJECT_DIR$/dnd5e_inventory.py" />
        <option value="$PROJECT_DIR$/dnd5e_weaponry.py" />
        <option value="$PROJECT_DIR$/trace.py" />
        <option value="$PROJECT_DIR$/dnd5e_actions.py" />
        <option value="$PROJECT_DIR$/dnd5e_events.py" />
        <option value="$PROJECT_DIR$/dnd5e_functions_and_enums.py" />
        <option value="$PROJECT_DIR$/dnd5e_armor.py" />
        <option value="$PROJECT_DIR$/dnd5e_classes.py" />
        <option value="$PROJECT_DIR$/dnd5e_races.py" />
        <option value="$PROJECT_DIR$/dnd5e_misc.py" />
        <option value="$PROJECT_DIR$/dnd5e_enums.py" />
        <option value="$PROJECT_DIR$/dnd5e_entity.py" />
        <option value="$PROJECT_DIR$/dnd5e_creatures.py" />
        <option value="$PROJECT_DIR$/dnd5e_character_sheet.py" />
        <option value="$PROJECT_DIR$/dnd5e_interactions.py" />
        <option value="$PROJECT_DIR$/dnd5e_functions.py" />
        <option value="$PROJECT_DIR$/dnd5e_encounter.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="960" />
    <option name="width" value="960" />
    <option name="height" value="1040" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="dnd5e_discord" type="b2602c69:ProjectViewProjectNode" />
              <item name="dnd5e_discord" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="C:/Program Files/Git/bin/git.exe" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings is-module-sdk="true">
        <option name="myUseModuleSdk" value="true" />
      </console-settings>
    </option>
  </component>
  <component name="PyDebuggerOptionsProvider">
    <option name="mySaveCallSignatures" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.dnd5e_encounter">
    <configuration name="dnd5e_armor" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_armor.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_encounter" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_encounter.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_enums" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_enums.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_functions_and_enums" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_functions_and_enums.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_interactions" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_interactions.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.dnd5e_encounter" />
        <item itemvalue="Python.dnd5e_interactions" />
        <item itemvalue="Python.dnd5e_enums" />
        <item itemvalue="Python.dnd5e_functions_and_enums" />
        <item itemvalue="Python.dnd5e_armor" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ce54a110-60b4-4b2f-b783-675197c55daf" name="Default Changelist" comment="" />
      <created>1558021764918</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1558021764918</updated>
    </task>
    <task id="LOCAL-00001" summary="character_classes.py&#10;    renamed weaponry.attackDie to attack_die&#10;    renamed CharacterSheet.__repr__ to full_str&#10;    implemented characterSheet.melee_attack(self)&#10;        - runs over equipped weapons, returns a dict with:&#10;            - num: the number of attacks the character makes&#10;            - effects: the effects to be applied to the attacked target&#10;            - calculation: a damage function for the weapon:&#10;                - this is to include character/class/race relevant bonus&#10;            - weapons: the weaponry involved:&#10;                - conveys the damage effects, and weapon attack function&#10;        soon to make a similar variant for creature, given its somewhat &#10;        more limited complexity&#10;    wrapped some testing/debug behind if name==main block&#10;creatures.py:&#10;    nothing important, just killed some whitespace&#10;encounter.py:&#10;    further work towards implementing do_battle()&#10;enums.py:&#10;    changed DAMAGETYPE subclasses to take arguments&#10;        - can now instantiate self with given damage value &#10;    a couple debug outs I haven't murdered yet.&#10;functions.py:&#10;    dtypes no longer passed to GenericMelee.__init__()&#10;    dtypes no longer a self value of GenericMelee.__init__()&#10;        - contained within the weapon itself, &#10;          or applied by its attack function, not needed here.&#10;misc.py:&#10;    implemented a wrapper to call random as Die.random(self, upper) &#10;    wrapped some testing/debug behind if name==main block&#10;weaponry.py:&#10;    as mentioned in character_classes, renamed .attackDie to .attack_die&#10;    renamed equipFuntion to equip_function">
      <created>1558470700208</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1558470700208</updated>
    </task>
    <task id="LOCAL-00002" summary="Simple Melee combat at last!&#10;&#10;its come a long way, and it finally meets milestone 1, I can init a&#10;player, and some creatures, and they can try to kill eachother.&#10;&#10;renamed the file character_classes to character_sheet&#10;&#10;character_sheet:&#10;- moved init_wulfgar function to the end, so its out of the way&#10;- pushed the Equipment class out to its own file&#10;- pushed the events class out to its own file&#10;- added .is_lucky()&#10;- added .get_next_level_xp()&#10;- finished reworking get_attack&#10;- pushed __LINE__ debug function to its own file&#10;&#10;classes:&#10;- removed the hitpoints_lvl1, its set under character_sheet with hit_die&#10;&#10;creatures:&#10;- retagged the alias for dnd5e_weaponry to weaponry as I do elsewhere&#10;- gave creatures the equipment class, so they use same methods as player&#10;- changes default (dis)advantage vars to set() from None&#10;- added .atk_bonus and .effects vars&#10;- removed .check_attack()&#10;- removed .get_attack()&#10;- added .receive_damage()&#10;- added .melee_attack()&#10;- added ._wpn()&#10;- added .get_armor_class()&#10;- added Crab creature&#10;- added a few more fields to weapon:&#10;  - atk_type: enums.ATTACK, set&#10;  - wield_from: enums.EQUIP_SLOT, single&#10;- added more debug prints buried behind an if name == main block&#10;&#10;&#10;encounter:&#10;- Party.__init__ now converts its args to list, from tuple&#10;- Party.size() added&#10;- Party.__str__() added&#10;- Encounter:&#10;  - .init now copies Party Members rather than directly using&#10;  - .do_battle() now has some text feedback - will remove in time&#10;    - huge rewrite, pretty mch entirely new function&#10;  - .generate_hostile() no involves party size mods, and difficulties&#10;    - also not returns a reward dict - currently exp only&#10;- the simplistic battle routine buried in an if name == main block&#10;&#10;enums:&#10;- changed enums import from * to as misc, related changes throughout&#10;- killed a couple debug prints&#10;- added GENERIC to WEAPONS type&#10;- added EQUIP_SLOT enum&#10;&#10;events:&#10;- entirely new, though no new code, exiled from inside character_sheet&#10;&#10;inventory:&#10;- entirely new, exiled from inside character_sheet&#10;- more internal variables, for more places to put gear&#10;- equip_weapon() now checks for jaw, hands, and fingers slots.&#10;&#10;misc:&#10;- Die.__init__() no longer forces a min value of 2 sides - 1d1 possible&#10;- .random() altered to shortcut if 1 sided.&#10;&#10;weaponry:&#10;- importing ATTACK and EQUIP_SLOT enums&#10;- .__init__() args changed, added atk_type&#10;  -  sets self.atk_type and self.wield_from now as well&#10;- greataxe test def altered to set atk_type and wield_from&#10;&#10;trace:&#10;- entirely new, added to carry any debug related functions worth having&#10;- implemented __LINE__(), which behaves as __FILE__+_+__LINE__ does in C">
      <created>1558495683999</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1558495683999</updated>
    </task>
    <task id="LOCAL-00003" summary="Rudimentary leveling now works&#10;&#10;fixed an issue with creature weapons lacking weapon.flags not having&#10;their attack_die set.&#10;&#10;fixed encounter continuing and calling choice on a party which has &#10;already been eliminated.&#10;&#10;Character_sheet:&#10;- experience now hides behind a getter/setter.  Setter calls levelup&#10;  - levelup handled via re-calling __init__, inserting current stats&#10;- .__init__() modified to check if relevant attributes are None or set,&#10;  if none they are defaulted, if set they are used as is&#10;- ._wpn() now used hand.roll instead of hand.attack_die.roll()&#10;&#10;Classes:&#10;- Barbarian:&#10;  - class_ability is no longer defaulted unless not assigned &#10;  - .__init__() now takes many configuration arguments, to pass in state&#10;    - tests those for None, if None, defaults, else keeps what was passed&#10;&#10;Creatures:&#10;- like with character_sheet, ._wpn() now uses hand.roll()&#10;&#10;encounter:&#10;- Party.__str__() now includes character level in its return&#10;- Encounter.do_battle() now tests for active party internally too&#10;  - immediately after selecting a weapon, but before choosing a target&#10;    fixes trying to choose target from a party with no members&#10;  - removed the per-hit input(), now runs the entire encounter at once.&#10;  - now returns a dict for failure as well rather than just zero&#10;- Encounter.generate_hostile():&#10;  - currently returns exp equal to stated for creatures&#10;    - this is for testing purposes to accelerate growth.  &#10;    - it will not stay this fast&#10;- if name == main:&#10;  - now tests sum of hp for player one and two before terminating.&#10;  - divides the rewards among the players&#10;  - sets their hp to max after each iteration&#10;  &#10;inventory:&#10;- had a case where creatures were not setting flags on their weapons&#10;  - this caused Weapon.equip_weapon() to not assign its attack die&#10;    fixed&#10;&#10;weaponry:&#10;- Weapon.roll() was still using the old .attackDie name, retagged it">
      <created>1558503107098</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1558503107098</updated>
    </task>
    <task id="LOCAL-00004" summary="quick housecleaning update&#10;&#10;character_sheet:&#10;- CharacterSheet now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- .get_attack() is eliminated&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;classes:&#10;- appended background.skills to self.skills&#10;&#10;creatures:&#10;- Creature now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- minor edits to the print statements int he debug block&#10;&#10;&#10;encounter:&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;entity:&#10;- Entity created from common features of Creature and CharacterSheet&#10;&#10;enums:&#10;- BACKGROUND.SKILL renamed to .SKILLS, its a set of multiple, pluralise&#10;&#10;trace:&#10;- new function print()&#10;  - overrides default print function.&#10;  - inserts __LINE__() before given args">
      <created>1558556480240</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1558556480240</updated>
    </task>
    <task id="LOCAL-00005" summary="quick bugfix and update to encounter test code&#10;  Forgot to check target armor class, so no one was ever missing, lol.&#10;&#10;&#10;character_sheet:&#10;- silenced the 'level up' print in CharacterSheet.level_up()&#10;- added level to .dict_short()&#10;&#10;encounter:&#10;- Encounter.init()&#10;  - added verbose, silent, auto_run and debug_rewards parameters&#10;- Encounter.do_battle()&#10;  - wrapped the prints behind tests for verbose and silent&#10;  - wrapped the input that halts iteration behind a test for auto_run&#10;  - killed some old commented code&#10;  - attacks now get target ac, attack rolls less than target ac miss&#10;- XP_thresholds now has 7 difficulty levels&#10;  - each is 2/3 of the next&#10;- test code now runs until level 20 is reached">
      <created>1558562837027</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1558562837027</updated>
    </task>
    <task id="LOCAL-00006" summary="encounter:&#10;- fixed criticals, critical attacks now double damage as planned&#10;&#10;enums:&#10;- added DamageType.__Damage.__mull__()&#10;- added DamageType.__Damage.__imull__()&#10;- added DamageType.__Damage.__rmull__()&#10;&#10;misc:&#10;- attack_roll() now checks critical against roll, was attack_roll">
      <created>1558568331093</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1558568331093</updated>
    </task>
    <task id="LOCAL-00007" summary="a huge milestone was crossed with this update - a preliminary &#10;implementation of the event system is now in place - pending survival...&#10;&#10;Work will now proceed on the remaining class traits for the barbarian &#10;class, barring any issues, this implementation survives as is, otherwise&#10;it is, as ever, subject to obliteration - initial prognosis is promising&#10;&#10;armor:&#10;- Armor.__init__() now is entirely keyword arguments&#10;  - added equip_to argument&#10;- Armor.Shield super call altered to match Armor.__init__&#10;- armor test definition altered accordingly.&#10;&#10;character_sheet:&#10;- added iteration of the traits list to trigger event 'installation'&#10;- CharacterSheet.level_up() is now a looped process&#10;- killed some commented out code&#10;- minor changes to the test code&#10;&#10;encounter:&#10;- Encounter.do_battle():&#10;  - now import enums.EVENT&#10;  - attacks dict replaced with attack object&#10;  - for atk in attacks look replaced with while attack.num&#10;  - misc.attack_roll() replaced with call to attack.result()&#10;  - attack log now indicates when criticals happen&#10;  - added event calls for before_turn, attack, critical, defend, death, &#10;    after_battle, and after_turn&#10;  &#10;entity:&#10;- added Entity.equip() wrapper call for accessing self.equipment&#10;- added Entity.unequip() wrapper call for accessing self.equipment&#10;- stripped attack trigger from Entity.melee_attack()&#10;  - now generates a class object rather than a dictionary&#10; &#10;enums:&#10;- CLASS_TRAITS attributes are not classes anymore, but same named vars&#10;  - assigned functions.ClassTrait&lt;Name&gt; to attaribute &lt;NAME&gt;&#10;- DAMAGE_TYPES now has __add__, __sub__, __div__, &#10;  and respective i and r variants&#10;- ARMOR is now a three tier nested class enumeration&#10;- added EVENT enum with :&#10;  - INIT, EQUIP, UNEQUIP, BEFORE_BATTLE, AFTER_BATTLE, BEFORE_TURN, &#10;    AFTER_TURN, BEFORE_ACTION, AFTER_ACTION, ATTACK, DEFEND, CRITICAL, &#10;    LEVEL_UP, REST_LONG, REST_SHORT, ROLL_ATTACK, ROLL_DAMAGE, ROLL_DC, &#10;    ROLL_HP, DEATH, AND HEAL&#10;  - very likely this will grow considerably.&#10;- if __name__ == '__main__' test block&#10;&#10;events:&#10;- Event.Effect.__call__() doesn't return anything now&#10;- previous limited set of event lists are not class attributes, they are&#10;  now instance attributes, and there are more of them - one for every &#10;  event in enums.EVENT&#10;&#10;functions:&#10;Massive expansion, the bulk of the effort happened here.&#10;- GenericAttack and GenericMelee commented out for now&#10;- full implementation of ClassTraitRage&#10;- preliminary instantiation of the following ClassTrait&lt;Name&gt;:&#10;  - UnarmoredDefence, RecklessAttack, DangerSense, ExtraAttack, &#10;    FastMovement, FeralInstinct, BrutalCritical, RelentlessRage, &#10;    PersistentRage, IndomitableMight, PrimalChampion, Frenzy, &#10;    MindlessRage, IntimidatingPresence, Retaliation, SpiritSeeker, &#10;    SpiritWalker, TotemBear, TotemEagle, TotemWolf, AspectBear, &#10;    AspectEagle, AspectWolf, AttuneBear, AttuneEagle, AttuneWolf&#10;- test code block at bottom behind if __name__ == '__main__':&#10;&#10;inventory:&#10;- Equipped.equip_weapon() now uses attribute equip_to, no wield_from&#10;- .get_equipped() implemented&#10;- .unequip() implemented&#10;- .unequip_slot() implemented&#10;&#10;items:&#10;- Item.__init__() equip_to added to parameters&#10;  - added to self as well&#10; &#10;misc:&#10;- eliminated the Event code - it doesn't need to be in two places&#10;- pushed the Die roll average roll count from 10k, to 1m&#10;- eliminated attack_roll()&#10;- cleaned up the test code outputs&#10;&#10;weaponry:&#10;- converted Weapon.__init__() parameters to named parameters&#10;  - added equip_to to super() call to match changes to Item&#10;  - Weapon no longer stores wield_from, attribute eliminated&#10;  &#10;trace:&#10;- added offset parameter to print overload, enabling selection of which &#10;  context's file_line is printed out.">
      <created>1558790436541</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1558790436542</updated>
    </task>
    <task id="LOCAL-00008" summary="a mixed bug stomping / progress update - there were some serious flaws &#10;in the code for the event system, in particular with identifying &#10;instances of a class and appending instances of a trait as causes of &#10;the effect&#10;&#10;Progress has been made in implementing the barbarian's traits, and some &#10;related needs along the way.&#10;&#10;character_sheet:&#10;- player_race now instantiates a new instance of self at the new level&#10;  rather than carrying the old instance - which prevented gaining traits&#10;- NATURAL_DEFENCE is now a default trait of entities.&#10;- the init() event is thrown at the end of character_sheet.__init__()&#10;- the level_up event is thrown at the end of character_sheet.level_up()&#10;&#10;encounter:&#10;- .do_Battle doesn't import enums.EVENT anymore&#10;- critical attacks now triggers the attacker's critical event&#10;- rewrote how damage is applied to a target&#10;  - effects.defnd now expects 4 keywords:&#10;    - attacker: the attacker's object&#10;    - attack: the attacker's attack object&#10;    - defender: the target of the attack - typically self, but might be&#10;      a party member for defence events relating to party members&#10;    - defence: a defence object to be loaded with the reply   &#10;  - a defence object is created, and passed to the target's defend&#10;    subscribers for updating with damage modifiers, and effects for the&#10;    target to suffer as a consequence (like thorns)&#10;- target.hp &lt; 1 now triggers the target's death event&#10;&#10;entity:&#10;- un-named entities are now given a default name: 'an Entity is No One'&#10;- attributes advantage, disadvantage, damage_resist, damage_vulnerable, &#10;  end proficiency_skills changed from type set() to type &#10;  Event.Effects._none via wrapper function Event.none()&#10;  &#10;enums:&#10;- ABILITY's members now have an affectors attribute - used to list what &#10;  effects have given this effect&#10;- ATTACK's members now have an affectors attribute&#10;- ADVANTAGE's members  ATTACK and DEFENCE are now attributes referencing &#10;  the same named enum classes&#10;- DAMAGE_TYPE:&#10;  - __init__():&#10;    - damage parameter defaults to None&#10;    - affectors attribute added&#10;  - __repr__():&#10;    - now returns class name if it lacks a .damage attribute&#10;  - all member .__init__() funcitons now default damage to None&#10;  &#10;events:&#10;- Event.__repr__() no long imports sys for sys.stdout.flush&#10;  - sys.stdout.flush call removed&#10;  - .get(self, item) implemented - used to find instances of a type &#10;    within the set&#10;  - .__init__() now also setsup lists for heal and _none events.&#10;    - _none is there to allow none event, but similar functioning lists &#10;      to abuse the same code and stay out of the way.&#10;      &#10;functions:&#10;- TraitsBase.__call__() eliminated&#10;- TraitsBase.add_affector(self, what, where) implemented&#10;- TraitsBase.remove_affector(self, what, where) implemented&#10;- TraitNaturalDefence implemented&#10;- ClassTraitRage:&#10;  - .__init__() now calls add_affector to append damage resistances&#10;  - .uninstall() now calls remove_affector to strip damage resistances&#10;  - .equip_change now conditionally calls uninstall rather than always&#10;- ClassTraitUnarmoredDefence implemented&#10;- ClassTraitRecklessAttack implemented&#10;&#10;misc:&#10;- class Defend added for use by defence events&#10;  - currently just assembles a list of armor_class results&#10;  - get_armor_class returns the largest value in the results&#10;- getAdvantage tests changed to account for changes in event system&#10;&#10;trace:&#10;- added line function to get the current line the code is on.">
      <created>1558988870525</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1558988870525</updated>
    </task>
    <task id="LOCAL-00009" summary="progress update - the event system has gained some further refinements, &#10;  some bug's have gotten squashed as they were encountered, and a large&#10;  degree of trace capability was introduced to ease further debugging.&#10;  &#10;It is potentially very verbose right now, due to all of the debug &#10;printouts which are hiding behind a simple boolean.  The boolean flags &#10;are in encounter, events, and functions&#10;  &#10;armor:&#10;- .flags attribute removed&#10;- Plate armor weight fixed, its not 7 lbs, its 65 lbs&#10;- breastplate added to aid in testing the Rage trait&#10;&#10;character_sheet:&#10;- .__init__() parameters now include unspent points from leveling up&#10;  - passed value to Entity via super().__init__ parameter&#10;- .level_up() now checks for, and passes unspent points for the re-init&#10;- .get_armor_class() is testing armor.enum_type now, not armor.flags&#10;- test function init_wulfgar now uses breastplate instead of plate.&#10;&#10;encounter:&#10;- re-organised a few things that aren't order dependent to be first&#10;- added a few more event triggers&#10;&#10;entity:&#10;- Entity.__init__() parameters now includes unspent ability points&#10;- .status and .unspent_ability attributes added&#10;- equip and unequip events added to the equip and unequip wrapper funcs&#10;- .save_roll() added, yielding a common place to trigger events from.&#10;&#10;enums:&#10;- the SKILL enum's members are now instantiatable, with affectors&#10;&#10;events:&#10;- Event.Effect.__call__() now responds with debug info:&#10;  - the line of code it was called with&#10;  - the event name, host name, and affector&#10;- incapacitated, move, and proficiency_check events added.&#10;&#10;functions:&#10;- TraitsBase.__init__() now calls ._install(), rather than .install()&#10;- .install() retagged to ._install()&#10;- ._install() now queried each functions that is registered with it for&#10;  methods with names that match event names, and installs them there when&#10;  found&#10;  &#10;  child install methods are handled by calling them as the last step of &#10;  this installation methof&#10;- .uninstall, same as happened to .install&#10;- .add_affector():&#10;  - very verbose debugging info added&#10;  - destination is now a string rather than the target reference&#10;- .remove_affector()&#10;  - very verbose debugging info added&#10;  - destination is now a string rather than the target reference&#10;- implemented: TraitAbilityScoreImprovement, DCThrow&#10;- TraitNaturalDefence&#10;  - trimmed the error handling - errors indicate there is a bug&#10;- ClassTraitRage:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - added a few more flags to its __init__&#10;  - stripped the now redundant install and uninstall functions&#10;  - added a little debug printing to trace its activities&#10;  - improved its logic somewhat&#10;- ClassTraitUnarmoredDefence:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - stripped the now redundant install and uninstall functions&#10;  - ensured equip_change is aliased to both equip and unequip&#10;  - appended *args, **kwargs to parameters for methods&#10;- ClassTraitRecklessAttack:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - stripped the now redundant install and uninstall functions&#10;  - littered it with debug print outs to trace its activities&#10;  - attack method implemented&#10;  - before_turn method implemented&#10;- implemented methods: ClassTraitExtraAttack, ClassTraitFastMovement, &#10;  ClassTraitFeralInstinct, ClassTraitBrutalCritical, RaceTraitLucky&#10;  &#10;misc:&#10;- Attack object now carries the critical multiplier as an attribute&#10;&#10;trace:&#10;- called_with() method implemented &#10;  - retrieves and cleans up the calling line of code two frames ago, &#10;    which for called with, is whoever called the frame that called this">
      <created>1559204459601</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1559204459601</updated>
    </task>
    <task id="LOCAL-00010" summary="Further implementation work on th events system, related triggers such &#10;as die rolls, incapacitation, preliminary work setting up statuses, and &#10;more barbarian traits.&#10;&#10;characterSheet:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- .__init__() now checks for needing to level up the character based on &#10;  given experience&#10;- .get_next_level_xp(): added a level 21 with absurd exp needs&#10;- expanded the debug block at the bottom of the file&#10;&#10;classes:&#10;- the barbarian now substitutes the rage traits as they level:&#10;  - persistent rage replaces relentless rage&#10;  - relentless rage replaces rage&#10;&#10;encounter:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- do_battle.print_parties() implemented rather than just a set of &#10;  statements at the start of do_battle().&#10;- when entity begins turn with hp&lt;=0 and incapacitated event is thrown, &#10;  if entity hp increases as a consequence, they are returned to their &#10;  party&#10;- added call to event.roll_attack()&#10;- added some more to the debug test block&#10;&#10;entity:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- now imports NamedTuple from dnd5e_misc&#10;- Entity.__init__():&#10;  - moved, changed, and renamed assignment statements for advantage, &#10;    disadvantage, damage_resist, damage_vulnerable, proficiency_skills, &#10;    temporary_hitpoints, actions, and status&#10;    - each was renamed from &lt;name&gt; to _&lt;name&gt;&#10;    - each occurs in a block at the very end now&#10;    - each assigns Event() rather than Event.none() now&#10;  - added assignment of a die(1,20) to self.d20&#10;  - added self.._immunity assignment as Event()&#10;- added @property and @var.setter functions for each of advantage, &#10;    disadvantage, damage_resist, damage_vulnerable, proficiency_skills, &#10;    temporary_hitpoints, actions, and status&#10;    - @property returns self._name.none&#10;    - @var.setter assigns to self._var.none&#10;- method is_lucky eliminated in favour of Lucky event function&#10;- reworked flow of _wpn, to utilise event.roll_damage()&#10;- renamed save_roll() to roll_dc()&#10;- reworked roll_dc to trigger event.roll_dc()&#10;&#10;enums:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- Ability now has protected attributes _max_&lt;var&gt; for each of STR, CON, &#10;  DEX, INT, WIS, and CHA.  That is, self._max_DEX now exists&#10;  - overloaded .__setattr__ to intercept assignments to apply the &#10;    limit(s) referenced in the new _max_ vars to attributes&#10;  - implemented a set_max() method to assign new values to the protected &#10;    maximums&#10;- TRAIT.Lucky now references a trait function&#10;- STATUS members have all now received preliminary implementations:&#10;  - all inherit from common Call class, which implements __call__ method&#10;    and creates self.affectors list&#10;  - all now have .__init__() methods&#10;  - added ENRAGED and FRENZIED statuses&#10;- DAMAGETYPE methods .__idiv__() and .__rdiv__() renamed to the correct &#10;  python 3.0 names .__itruediv__() and .__ifloordiv__(), respectively&#10;&#10;events:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- Event.Effects._none retagged to .none&#10;&#10;functions:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- TraitsBase._-init__()&#10;  - added reference to self.host.effects as self.events&#10;- implemented preliminary functions for Status&lt;stat&gt; where &lt;stat&gt; is an &#10;  element of this list:  Blinded, Charmed, Dead, Deafened, Frightened, &#10;  Grappled, Incapacitated, Invisible, Paralyzed, Petrified, Poisoned, &#10;  Prone, Restrained, Stunned, Unconscious, Enraged, Frenzied&#10;- fully implemented StatusExhausted - testing required&#10;- classTraitRage now has attributes since_last_attack, and &#10;  rage_length_max, both used to dynamically control the limits of rage&#10;  - now adds self to effects attribute of attack objects in attack event&#10;- ClassTraitRelentlessRage now inherits from ClassTraitRage, rather than &#10;  TraitsBase&#10;  - fully implemented methods for incapacitated, rest_long, and &#10;    rest_short events&#10;- ClassTraitPersistentRage now inherits form ClassTraitRelentlessRage, &#10;  rather than TraitsBase.&#10;  - sets since_last_attack and rage_length_max to 999999999&#10;- ClassTraitIndomitableMight now fully implemented&#10;- ClassTraitPrimalChampion now fully implemented&#10;- ClassTraitFrenzy now fully implemented&#10;- ClassTraitLucky now fully implemented&#10;- WeaponEffectsGSTQ2H implemented&#10;&#10;misc:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print()&#10;- Attack: &#10;  - attack_die is now a class attribute, rather than instance&#10;  - get() method added, to allow searching the self.effects attribute, &#10;    for instantiated or uninstantiated instances of class objects&#10;  - self.roll method eliminated&#10;  - self.roll1 and self.roll2 attributes added.&#10;  - set_rolls() method added&#10;  - rolled_one() method eliminated&#10;&#10;weaponry:&#10;- now imports all from functions&#10;- Weaponry.roll() no returns None when no die, rather than zero&#10;- implemented GSTQ2H weapon">
      <created>1559778428531</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1559778428531</updated>
    </task>
    <task id="LOCAL-00011" summary="Further implementation work on th events system, related triggers such &#10;as die rolls, incapacitation, preliminary work setting up statuses, and &#10;more barbarian traits.&#10;&#10;characterSheet:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- .__init__() now checks for needing to level up the character based on &#10;  given experience&#10;- .get_next_level_xp(): added a level 21 with absurd exp needs&#10;- expanded the debug block at the bottom of the file&#10;&#10;classes:&#10;- the barbarian now substitutes the rage traits as they level:&#10;  - persistent rage replaces relentless rage&#10;  - relentless rage replaces rage&#10;&#10;encounter:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- do_battle.print_parties() implemented rather than just a set of &#10;  statements at the start of do_battle().&#10;- when entity begins turn with hp&lt;=0 and incapacitated event is thrown, &#10;  if entity hp increases as a consequence, they are returned to their &#10;  party&#10;- added call to event.roll_attack()&#10;- added some more to the debug test block&#10;&#10;entity:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- now imports NamedTuple from dnd5e_misc&#10;- Entity.__init__():&#10;  - moved, changed, and renamed assignment statements for advantage, &#10;    disadvantage, damage_resist, damage_vulnerable, proficiency_skills, &#10;    temporary_hitpoints, actions, and status&#10;    - each was renamed from &lt;name&gt; to _&lt;name&gt;&#10;    - each occurs in a block at the very end now&#10;    - each assigns Event() rather than Event.none() now&#10;  - added assignment of a die(1,20) to self.d20&#10;  - added self.._immunity assignment as Event()&#10;- added @property and @var.setter functions for each of advantage, &#10;    disadvantage, damage_resist, damage_vulnerable, proficiency_skills, &#10;    temporary_hitpoints, actions, and status&#10;    - @property returns self._name.none&#10;    - @var.setter assigns to self._var.none&#10;- method is_lucky eliminated in favour of Lucky event function&#10;- reworked flow of _wpn, to utilise event.roll_damage()&#10;- renamed save_roll() to roll_dc()&#10;- reworked roll_dc to trigger event.roll_dc()&#10;&#10;enums:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- Ability now has protected attributes _max_&lt;var&gt; for each of STR, CON, &#10;  DEX, INT, WIS, and CHA.  That is, self._max_DEX now exists&#10;  - overloaded .__setattr__ to intercept assignments to apply the &#10;    limit(s) referenced in the new _max_ vars to attributes&#10;  - implemented a set_max() method to assign new values to the protected &#10;    maximums&#10;- TRAIT.Lucky now references a trait function&#10;- STATUS members have all now received preliminary implementations:&#10;  - all inherit from common Call class, which implements __call__ method&#10;    and creates self.affectors list&#10;  - all now have .__init__() methods&#10;  - added ENRAGED and FRENZIED statuses&#10;- DAMAGETYPE methods .__idiv__() and .__rdiv__() renamed to the correct &#10;  python 3.0 names .__itruediv__() and .__ifloordiv__(), respectively&#10;&#10;events:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- Event.Effects._none retagged to .none&#10;&#10;functions:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- TraitsBase._-init__()&#10;  - added reference to self.host.effects as self.events&#10;- implemented preliminary functions for Status&lt;stat&gt; where &lt;stat&gt; is an &#10;  element of this list:  Blinded, Charmed, Dead, Deafened, Frightened, &#10;  Grappled, Incapacitated, Invisible, Paralyzed, Petrified, Poisoned, &#10;  Prone, Restrained, Stunned, Unconscious, Enraged, Frenzied&#10;- fully implemented StatusExhausted - testing required&#10;- classTraitRage now has attributes since_last_attack, and &#10;  rage_length_max, both used to dynamically control the limits of rage&#10;  - now adds self to effects attribute of attack objects in attack event&#10;- ClassTraitRelentlessRage now inherits from ClassTraitRage, rather than &#10;  TraitsBase&#10;  - fully implemented methods for incapacitated, rest_long, and &#10;    rest_short events&#10;- ClassTraitPersistentRage now inherits form ClassTraitRelentlessRage, &#10;  rather than TraitsBase.&#10;  - sets since_last_attack and rage_length_max to 999999999&#10;- ClassTraitIndomitableMight now fully implemented&#10;- ClassTraitPrimalChampion now fully implemented&#10;- ClassTraitFrenzy now fully implemented&#10;- ClassTraitLucky now fully implemented&#10;- WeaponEffectsGSTQ2H implemented&#10;&#10;misc:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print()&#10;- Attack: &#10;  - attack_die is now a class attribute, rather than instance&#10;  - get() method added, to allow searching the self.effects attribute, &#10;    for instantiated or uninstantiated instances of class objects&#10;  - self.roll method eliminated&#10;  - self.roll1 and self.roll2 attributes added.&#10;  - set_rolls() method added&#10;  - rolled_one() method eliminated&#10;&#10;weaponry:&#10;- now imports all from functions&#10;- Weaponry.roll() no returns None when no die, rather than zero&#10;- implemented GSTQ2H weapon">
      <created>1559779499534</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1559779499534</updated>
    </task>
    <task id="LOCAL-00012" summary="A big sideways push.  There is now a means to interactively create &#10;characters, rather than hardcoded characters only.&#10;&#10;classes:&#10;- expanded all class configs to carry a new attribute, skills_qty&#10;- appended the missing skills for the other classes(than barbarian)&#10;- added ability_suggest dict attribute&#10;- changed the barbarian to carry the whole trait set on the class level&#10;&#10;encounter:&#10;- now imports interactions&#10;- remembers the previous target&#10;- the debug code block now iters the potential actions a player could &#10;  take - this will be expanded to actually control an encounter if the &#10;  player is taking direct control.&#10;&#10;entity:&#10;- no longer imports Skill and Trait from enums&#10;- now imports a location object - will be put to use soon in carrying &#10;  positional data&#10;&#10;enums:&#10;- TRAIT.BRAVE now references a null function as a test case for &#10;  preliminary assignment without implementation&#10;- BACKGROUNDS now all have both SKILLS and TOOLS variables&#10;&#10;functions:&#10;- added class RaceTraitBrave(TraitsBase):pass to test non-implementation&#10;&#10;interactions:&#10;- entirely new&#10;  - new_user() spits out an informational string&#10;  - get_value_from_curve() takes a range, and deviation, throws a random &#10;    value in that range and returns the result&#10;  - getAbility() interacts directly with the user, to get an assignment&#10;    for the default array [15,14,13,12,10,8] to the ability scores&#10;  - new() spins up a new character, interacting with the user to make &#10;    the choices along the way.&#10;  - ActionHelp() gives a quick help output for combat actions you can &#10;    take -- almost entirely not implemented at current.&#10;  - print_choices(), a helper function that enumerates and linebreaks a &#10;    set of options&#10;  - get_implemented_names() takes a source, and destination, compares &#10;    them and reports on how thoroughly implemented the source is.&#10;  - ChooseCombatAction() is a preliminary top level turn control&#10;    function which will end up being the primary interaction with players&#10;    in encounters.&#10;&#10;misc:&#10;- a new class, Location, will eventually have a roll in entity positions&#10;- getint() shamelessly stole this from another project of mine&#10;- getstr() shamelessly stole this from another project of mine&#10;&#10;races:&#10;- races now have the age, height, and weight range information at the &#10;  class level, so its possible to place new characters on the range&#10;  before instantiating.">
      <created>1560073531623</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1560073531623</updated>
    </task>
    <task id="LOCAL-00013" summary="Quick preparatory update - Ripped Encounter.do_battle to pieces.  This &#10;is the first step towards integrating choice of action, and terminal &#10;interaction with the do_battle function.&#10;&#10;actions:&#10;- new file, will be hosting all of the action specific code here.  &#10;  - do_battle's main loop is going to be moved here eventually&#10;  - some of do_battles helper functions will end up here eventually&#10;- dummy functions laid out&#10;&#10;encounter:&#10;- retagged player_party to party1&#10;- retagged hostile_party to party2&#10;- method generate_hostile():&#10;  - renamed to generate_party2&#10;  - no longer requires parameter difficulty&#10;- initiative list creation now wrapped in a method, before_battle()&#10;- player boolean eliminated, party # is a temporary self var of each &#10;  entity, assigned during creation of initiative list, removed at end &#10;  of encounter&#10;- entity target selection now wrapped in a method, get_target()&#10;- everything form target selection, to creation of the defend object now &#10;  wrapped in a method, attack_roll()&#10;- everything from creation of the defend object to hit decision now&#10;  wrapped in a method, target_defence()&#10;- target_ac &gt; attack_roll true case now wrapped in a method, miss()&#10;- target_ac &gt; attack_roll true case now wrapped in a method, target_hit()&#10;- new methods, before_battle, after_battle, target_defence, attack_roll,&#10;  get_target, target_hit, miss, incapacitate_target&#10;  &#10;functions:&#10;- TraitsBase methods add_affector and remove_affector moved outside&#10;  the class, wrapper of same name still held internally.&#10;  - Permits actions to use the affector system, without needing them to&#10;    be inheritors of TraitsBase.  Inheritors need only specify what the  &#10;    affector is and where it belongs.  Non-inheritors must also specify&#10;    the host and token,">
      <created>1560211811590</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1560211811590</updated>
    </task>
    <task id="LOCAL-00014" summary="The brain-melty task of using the event system, from outside the event &#10;system, which is not really how I intended it when I made it, but how&#10;actions are clearly best handled, has been resolved.  Some minor changes&#10;resulted. &#10;&#10;Initial combat actions Dodge, and Assist are now ready to tie into &#10;Encounter.do_battle(), as is Attack which was the first one implemented.&#10;&#10;Work on implementing user interaction inside do_battle will now begin.&#10;&#10;The next step after terminal interaction to control battles, is creation&#10;of battles via terminal interaction, either as an auto fight vs creatures,&#10;an interactive fight vs creatures, or a duel vs other players.&#10;&#10;Following that will be tying terminal interactions, to the discord api.&#10;&#10;actions:&#10;- gave it the now standard trace.print debug init block&#10;- littered a few todo's&#10;- implemented CombatAssist&#10;- implemented CombatDodge&#10;- implemented a test block to verify functionality&#10;&#10;encounter:&#10;- do_battle no longer calls self.target_defence &#10;  or defence.get_armor_class()&#10;  - Now wrapped up inside of Encounter.attack_roll() method.&#10;- weapon damage is now set in two stages, giving defence events a chance&#10;  to edit the result before the critical multiplier is applied.&#10;&#10;events:&#10;- added another event category, battle_cleanup(), used to strip effects&#10;  which did not get a chance to remove themselves from characters&#10;&#10;functions:&#10;- kicked methods add_affector and remove_affector over to misc to resolve&#10;  a circular import issue.  They sort of belong in misc more anyways&#10;- all set.remove() calls replaced with set.discard(), remove throws an&#10;  exception if the item being removed is not found, discard does not.&#10; &#10;misc:&#10;- now has methods add_affector, and remove_affector, moved here from &#10;  functions">
      <created>1560414772397</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1560414772397</updated>
    </task>
    <option name="localTasksCounter" value="15" />
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1056" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Favorites" order="0" side_tool="true" />
      <window_info content_ui="combo" id="Project" order="1" visible="true" weight="0.046891466" />
      <window_info id="Structure" order="2" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Inspection Results" order="0" sideWeight="0.49947312" weight="0.2521645" />
      <window_info anchor="bottom" id="Terminal" order="1" weight="0.32900432" />
      <window_info anchor="bottom" id="Event Log" order="2" sideWeight="0.50052685" side_tool="true" weight="0.16341992" />
      <window_info anchor="bottom" id="Python Console" order="3" weight="0.32900432" />
      <window_info anchor="bottom" id="Message" order="4" />
      <window_info anchor="bottom" id="Find" order="5" />
      <window_info active="true" anchor="bottom" id="Run" order="6" sideWeight="0.73340356" visible="true" weight="0.38636363" />
      <window_info anchor="bottom" id="Version Control" order="7" sideWeight="0.49947312" weight="0.32900432" />
      <window_info anchor="bottom" id="Debug" order="8" weight="0.39935064" />
      <window_info anchor="bottom" id="Cvs" order="9" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="10" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="11" weight="0.33549783" />
      <window_info anchor="bottom" id="Metrics" order="12" sideWeight="0.49947312" weight="0.18939394" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.14285715" />
    </layout>
    <layout-to-restore>
      <window_info id="Favorites" order="0" side_tool="true" />
      <window_info active="true" content_ui="combo" id="Project" order="1" visible="true" weight="0.11940298" />
      <window_info id="Structure" order="2" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Inspection Results" order="0" sideWeight="0.49947312" weight="0.2521645" />
      <window_info anchor="bottom" id="Terminal" order="1" weight="0.32900432" />
      <window_info anchor="bottom" id="Event Log" order="2" sideWeight="0.50052685" side_tool="true" weight="0.3051948" />
      <window_info anchor="bottom" id="Python Console" order="3" weight="0.32900432" />
      <window_info anchor="bottom" id="Message" order="4" />
      <window_info anchor="bottom" id="Find" order="5" />
      <window_info anchor="bottom" id="Run" order="6" sideWeight="0.49947312" visible="true" weight="0.16450216" />
      <window_info anchor="bottom" id="Version Control" order="7" sideWeight="0.49947312" weight="0.32900432" />
      <window_info anchor="bottom" id="Debug" order="8" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="9" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="10" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="11" weight="0.08766234" />
      <window_info anchor="bottom" id="Metrics" order="12" weight="0.08874459" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.14285715" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list />
          </value>
        </entry>
        <entry key="User">
          <value>
            <list />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_NEW_TODO" value="false" />
    <option name="SHOW_DIRTY_RECURSIVELY" value="true" />
    <option name="FORCE_NON_EMPTY_COMMENT" value="true" />
    <MESSAGE value="character_classes.py&#10;    renamed weaponry.attackDie to attack_die&#10;    renamed CharacterSheet.__repr__ to full_str&#10;    implemented characterSheet.melee_attack(self)&#10;        - runs over equipped weapons, returns a dict with:&#10;            - num: the number of attacks the character makes&#10;            - effects: the effects to be applied to the attacked target&#10;            - calculation: a damage function for the weapon:&#10;                - this is to include character/class/race relevant bonus&#10;            - weapons: the weaponry involved:&#10;                - conveys the damage effects, and weapon attack function&#10;        soon to make a similar variant for creature, given its somewhat &#10;        more limited complexity&#10;    wrapped some testing/debug behind if name==main block&#10;creatures.py:&#10;    nothing important, just killed some whitespace&#10;encounter.py:&#10;    further work towards implementing do_battle()&#10;enums.py:&#10;    changed DAMAGETYPE subclasses to take arguments&#10;        - can now instantiate self with given damage value &#10;    a couple debug outs I haven't murdered yet.&#10;functions.py:&#10;    dtypes no longer passed to GenericMelee.__init__()&#10;    dtypes no longer a self value of GenericMelee.__init__()&#10;        - contained within the weapon itself, &#10;          or applied by its attack function, not needed here.&#10;misc.py:&#10;    implemented a wrapper to call random as Die.random(self, upper) &#10;    wrapped some testing/debug behind if name==main block&#10;weaponry.py:&#10;    as mentioned in character_classes, renamed .attackDie to .attack_die&#10;    renamed equipFuntion to equip_function" />
    <MESSAGE value="Simple Melee combat at last!&#10;&#10;its come a long way, and it finally meets milestone 1, I can init a&#10;player, and some creatures, and they can try to kill eachother.&#10;&#10;renamed the file character_classes to character_sheet&#10;&#10;character_sheet:&#10;- moved init_wulfgar function to the end, so its out of the way&#10;- pushed the Equipment class out to its own file&#10;- pushed the events class out to its own file&#10;- added .is_lucky()&#10;- added .get_next_level_xp()&#10;- finished reworking get_attack&#10;- pushed __LINE__ debug function to its own file&#10;&#10;classes:&#10;- removed the hitpoints_lvl1, its set under character_sheet with hit_die&#10;&#10;creatures:&#10;- retagged the alias for dnd5e_weaponry to weaponry as I do elsewhere&#10;- gave creatures the equipment class, so they use same methods as player&#10;- changes default (dis)advantage vars to set() from None&#10;- added .atk_bonus and .effects vars&#10;- removed .check_attack()&#10;- removed .get_attack()&#10;- added .receive_damage()&#10;- added .melee_attack()&#10;- added ._wpn()&#10;- added .get_armor_class()&#10;- added Crab creature&#10;- added a few more fields to weapon:&#10;  - atk_type: enums.ATTACK, set&#10;  - wield_from: enums.EQUIP_SLOT, single&#10;- added more debug prints buried behind an if name == main block&#10;&#10;&#10;encounter:&#10;- Party.__init__ now converts its args to list, from tuple&#10;- Party.size() added&#10;- Party.__str__() added&#10;- Encounter:&#10;  - .init now copies Party Members rather than directly using&#10;  - .do_battle() now has some text feedback - will remove in time&#10;    - huge rewrite, pretty mch entirely new function&#10;  - .generate_hostile() no involves party size mods, and difficulties&#10;    - also not returns a reward dict - currently exp only&#10;- the simplistic battle routine buried in an if name == main block&#10;&#10;enums:&#10;- changed enums import from * to as misc, related changes throughout&#10;- killed a couple debug prints&#10;- added GENERIC to WEAPONS type&#10;- added EQUIP_SLOT enum&#10;&#10;events:&#10;- entirely new, though no new code, exiled from inside character_sheet&#10;&#10;inventory:&#10;- entirely new, exiled from inside character_sheet&#10;- more internal variables, for more places to put gear&#10;- equip_weapon() now checks for jaw, hands, and fingers slots.&#10;&#10;misc:&#10;- Die.__init__() no longer forces a min value of 2 sides - 1d1 possible&#10;- .random() altered to shortcut if 1 sided.&#10;&#10;weaponry:&#10;- importing ATTACK and EQUIP_SLOT enums&#10;- .__init__() args changed, added atk_type&#10;  -  sets self.atk_type and self.wield_from now as well&#10;- greataxe test def altered to set atk_type and wield_from&#10;&#10;trace:&#10;- entirely new, added to carry any debug related functions worth having&#10;- implemented __LINE__(), which behaves as __FILE__+_+__LINE__ does in C" />
    <MESSAGE value="Rudimentary leveling now works&#10;&#10;fixed an issue with creature weapons lacking weapon.flags not having&#10;their attack_die set.&#10;&#10;fixed encounter continuing and calling choice on a party which has &#10;already been eliminated.&#10;&#10;Character_sheet:&#10;- experience now hides behind a getter/setter.  Setter calls levelup&#10;  - levelup handled via re-calling __init__, inserting current stats&#10;- .__init__() modified to check if relevant attributes are None or set,&#10;  if none they are defaulted, if set they are used as is&#10;- ._wpn() now used hand.roll instead of hand.attack_die.roll()&#10;&#10;Classes:&#10;- Barbarian:&#10;  - class_ability is no longer defaulted unless not assigned &#10;  - .__init__() now takes many configuration arguments, to pass in state&#10;    - tests those for None, if None, defaults, else keeps what was passed&#10;&#10;Creatures:&#10;- like with character_sheet, ._wpn() now uses hand.roll()&#10;&#10;encounter:&#10;- Party.__str__() now includes character level in its return&#10;- Encounter.do_battle() now tests for active party internally too&#10;  - immediately after selecting a weapon, but before choosing a target&#10;    fixes trying to choose target from a party with no members&#10;  - removed the per-hit input(), now runs the entire encounter at once.&#10;  - now returns a dict for failure as well rather than just zero&#10;- Encounter.generate_hostile():&#10;  - currently returns exp equal to stated for creatures&#10;    - this is for testing purposes to accelerate growth.  &#10;    - it will not stay this fast&#10;- if name == main:&#10;  - now tests sum of hp for player one and two before terminating.&#10;  - divides the rewards among the players&#10;  - sets their hp to max after each iteration&#10;  &#10;inventory:&#10;- had a case where creatures were not setting flags on their weapons&#10;  - this caused Weapon.equip_weapon() to not assign its attack die&#10;    fixed&#10;&#10;weaponry:&#10;- Weapon.roll() was still using the old .attackDie name, retagged it" />
    <MESSAGE value="quick housecleaning update&#10;&#10;character_sheet:&#10;- CharacterSheet now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- .get_attack() is eliminated&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;classes:&#10;- appended background.skills to self.skills&#10;&#10;creatures:&#10;- Creature now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- minor edits to the print statements int he debug block&#10;&#10;&#10;encounter:&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;entity:&#10;- Entity created from common features of Creature and CharacterSheet&#10;&#10;enums:&#10;- BACKGROUND.SKILL renamed to .SKILLS, its a set of multiple, pluralise&#10;&#10;trace:&#10;- new function print()&#10;  - overrides default print function.&#10;  - inserts __LINE__() before given args" />
    <MESSAGE value="quick bugfix and update to encounter test code&#10;  Forgot to check target armor class, so no one was ever missing, lol.&#10;&#10;&#10;character_sheet:&#10;- silenced the 'level up' print in CharacterSheet.level_up()&#10;- added level to .dict_short()&#10;&#10;encounter:&#10;- Encounter.init()&#10;  - added verbose, silent, auto_run and debug_rewards parameters&#10;- Encounter.do_battle()&#10;  - wrapped the prints behind tests for verbose and silent&#10;  - wrapped the input that halts iteration behind a test for auto_run&#10;  - killed some old commented code&#10;  - attacks now get target ac, attack rolls less than target ac miss&#10;- XP_thresholds now has 7 difficulty levels&#10;  - each is 2/3 of the next&#10;- test code now runs until level 20 is reached" />
    <MESSAGE value="encounter:&#10;- fixed criticals, critical attacks now double damage as planned&#10;&#10;enums:&#10;- added DamageType.__Damage.__mull__()&#10;- added DamageType.__Damage.__imull__()&#10;- added DamageType.__Damage.__rmull__()&#10;&#10;misc:&#10;- attack_roll() now checks critical against roll, was attack_roll" />
    <MESSAGE value="a huge milestone was crossed with this update - a preliminary &#10;implementation of the event system is now in place - pending survival...&#10;&#10;Work will now proceed on the remaining class traits for the barbarian &#10;class, barring any issues, this implementation survives as is, otherwise&#10;it is, as ever, subject to obliteration - initial prognosis is promising&#10;&#10;armor:&#10;- Armor.__init__() now is entirely keyword arguments&#10;  - added equip_to argument&#10;- Armor.Shield super call altered to match Armor.__init__&#10;- armor test definition altered accordingly.&#10;&#10;character_sheet:&#10;- added iteration of the traits list to trigger event 'installation'&#10;- CharacterSheet.level_up() is now a looped process&#10;- killed some commented out code&#10;- minor changes to the test code&#10;&#10;encounter:&#10;- Encounter.do_battle():&#10;  - now import enums.EVENT&#10;  - attacks dict replaced with attack object&#10;  - for atk in attacks look replaced with while attack.num&#10;  - misc.attack_roll() replaced with call to attack.result()&#10;  - attack log now indicates when criticals happen&#10;  - added event calls for before_turn, attack, critical, defend, death, &#10;    after_battle, and after_turn&#10;  &#10;entity:&#10;- added Entity.equip() wrapper call for accessing self.equipment&#10;- added Entity.unequip() wrapper call for accessing self.equipment&#10;- stripped attack trigger from Entity.melee_attack()&#10;  - now generates a class object rather than a dictionary&#10; &#10;enums:&#10;- CLASS_TRAITS attributes are not classes anymore, but same named vars&#10;  - assigned functions.ClassTrait&lt;Name&gt; to attaribute &lt;NAME&gt;&#10;- DAMAGE_TYPES now has __add__, __sub__, __div__, &#10;  and respective i and r variants&#10;- ARMOR is now a three tier nested class enumeration&#10;- added EVENT enum with :&#10;  - INIT, EQUIP, UNEQUIP, BEFORE_BATTLE, AFTER_BATTLE, BEFORE_TURN, &#10;    AFTER_TURN, BEFORE_ACTION, AFTER_ACTION, ATTACK, DEFEND, CRITICAL, &#10;    LEVEL_UP, REST_LONG, REST_SHORT, ROLL_ATTACK, ROLL_DAMAGE, ROLL_DC, &#10;    ROLL_HP, DEATH, AND HEAL&#10;  - very likely this will grow considerably.&#10;- if __name__ == '__main__' test block&#10;&#10;events:&#10;- Event.Effect.__call__() doesn't return anything now&#10;- previous limited set of event lists are not class attributes, they are&#10;  now instance attributes, and there are more of them - one for every &#10;  event in enums.EVENT&#10;&#10;functions:&#10;Massive expansion, the bulk of the effort happened here.&#10;- GenericAttack and GenericMelee commented out for now&#10;- full implementation of ClassTraitRage&#10;- preliminary instantiation of the following ClassTrait&lt;Name&gt;:&#10;  - UnarmoredDefence, RecklessAttack, DangerSense, ExtraAttack, &#10;    FastMovement, FeralInstinct, BrutalCritical, RelentlessRage, &#10;    PersistentRage, IndomitableMight, PrimalChampion, Frenzy, &#10;    MindlessRage, IntimidatingPresence, Retaliation, SpiritSeeker, &#10;    SpiritWalker, TotemBear, TotemEagle, TotemWolf, AspectBear, &#10;    AspectEagle, AspectWolf, AttuneBear, AttuneEagle, AttuneWolf&#10;- test code block at bottom behind if __name__ == '__main__':&#10;&#10;inventory:&#10;- Equipped.equip_weapon() now uses attribute equip_to, no wield_from&#10;- .get_equipped() implemented&#10;- .unequip() implemented&#10;- .unequip_slot() implemented&#10;&#10;items:&#10;- Item.__init__() equip_to added to parameters&#10;  - added to self as well&#10; &#10;misc:&#10;- eliminated the Event code - it doesn't need to be in two places&#10;- pushed the Die roll average roll count from 10k, to 1m&#10;- eliminated attack_roll()&#10;- cleaned up the test code outputs&#10;&#10;weaponry:&#10;- converted Weapon.__init__() parameters to named parameters&#10;  - added equip_to to super() call to match changes to Item&#10;  - Weapon no longer stores wield_from, attribute eliminated&#10;  &#10;trace:&#10;- added offset parameter to print overload, enabling selection of which &#10;  context's file_line is printed out." />
    <MESSAGE value="a mixed bug stomping / progress update - there were some serious flaws &#10;in the code for the event system, in particular with identifying &#10;instances of a class and appending instances of a trait as causes of &#10;the effect&#10;&#10;Progress has been made in implementing the barbarian's traits, and some &#10;related needs along the way.&#10;&#10;character_sheet:&#10;- player_race now instantiates a new instance of self at the new level&#10;  rather than carrying the old instance - which prevented gaining traits&#10;- NATURAL_DEFENCE is now a default trait of entities.&#10;- the init() event is thrown at the end of character_sheet.__init__()&#10;- the level_up event is thrown at the end of character_sheet.level_up()&#10;&#10;encounter:&#10;- .do_Battle doesn't import enums.EVENT anymore&#10;- critical attacks now triggers the attacker's critical event&#10;- rewrote how damage is applied to a target&#10;  - effects.defnd now expects 4 keywords:&#10;    - attacker: the attacker's object&#10;    - attack: the attacker's attack object&#10;    - defender: the target of the attack - typically self, but might be&#10;      a party member for defence events relating to party members&#10;    - defence: a defence object to be loaded with the reply   &#10;  - a defence object is created, and passed to the target's defend&#10;    subscribers for updating with damage modifiers, and effects for the&#10;    target to suffer as a consequence (like thorns)&#10;- target.hp &lt; 1 now triggers the target's death event&#10;&#10;entity:&#10;- un-named entities are now given a default name: 'an Entity is No One'&#10;- attributes advantage, disadvantage, damage_resist, damage_vulnerable, &#10;  end proficiency_skills changed from type set() to type &#10;  Event.Effects._none via wrapper function Event.none()&#10;  &#10;enums:&#10;- ABILITY's members now have an affectors attribute - used to list what &#10;  effects have given this effect&#10;- ATTACK's members now have an affectors attribute&#10;- ADVANTAGE's members  ATTACK and DEFENCE are now attributes referencing &#10;  the same named enum classes&#10;- DAMAGE_TYPE:&#10;  - __init__():&#10;    - damage parameter defaults to None&#10;    - affectors attribute added&#10;  - __repr__():&#10;    - now returns class name if it lacks a .damage attribute&#10;  - all member .__init__() funcitons now default damage to None&#10;  &#10;events:&#10;- Event.__repr__() no long imports sys for sys.stdout.flush&#10;  - sys.stdout.flush call removed&#10;  - .get(self, item) implemented - used to find instances of a type &#10;    within the set&#10;  - .__init__() now also setsup lists for heal and _none events.&#10;    - _none is there to allow none event, but similar functioning lists &#10;      to abuse the same code and stay out of the way.&#10;      &#10;functions:&#10;- TraitsBase.__call__() eliminated&#10;- TraitsBase.add_affector(self, what, where) implemented&#10;- TraitsBase.remove_affector(self, what, where) implemented&#10;- TraitNaturalDefence implemented&#10;- ClassTraitRage:&#10;  - .__init__() now calls add_affector to append damage resistances&#10;  - .uninstall() now calls remove_affector to strip damage resistances&#10;  - .equip_change now conditionally calls uninstall rather than always&#10;- ClassTraitUnarmoredDefence implemented&#10;- ClassTraitRecklessAttack implemented&#10;&#10;misc:&#10;- class Defend added for use by defence events&#10;  - currently just assembles a list of armor_class results&#10;  - get_armor_class returns the largest value in the results&#10;- getAdvantage tests changed to account for changes in event system&#10;&#10;trace:&#10;- added line function to get the current line the code is on." />
    <MESSAGE value="progress update - the event system has gained some further refinements, &#10;  some bug's have gotten squashed as they were encountered, and a large&#10;  degree of trace capability was introduced to ease further debugging.&#10;  &#10;It is potentially very verbose right now, due to all of the debug &#10;printouts which are hiding behind a simple boolean.  The boolean flags &#10;are in encounter, events, and functions&#10;  &#10;armor:&#10;- .flags attribute removed&#10;- Plate armor weight fixed, its not 7 lbs, its 65 lbs&#10;- breastplate added to aid in testing the Rage trait&#10;&#10;character_sheet:&#10;- .__init__() parameters now include unspent points from leveling up&#10;  - passed value to Entity via super().__init__ parameter&#10;- .level_up() now checks for, and passes unspent points for the re-init&#10;- .get_armor_class() is testing armor.enum_type now, not armor.flags&#10;- test function init_wulfgar now uses breastplate instead of plate.&#10;&#10;encounter:&#10;- re-organised a few things that aren't order dependent to be first&#10;- added a few more event triggers&#10;&#10;entity:&#10;- Entity.__init__() parameters now includes unspent ability points&#10;- .status and .unspent_ability attributes added&#10;- equip and unequip events added to the equip and unequip wrapper funcs&#10;- .save_roll() added, yielding a common place to trigger events from.&#10;&#10;enums:&#10;- the SKILL enum's members are now instantiatable, with affectors&#10;&#10;events:&#10;- Event.Effect.__call__() now responds with debug info:&#10;  - the line of code it was called with&#10;  - the event name, host name, and affector&#10;- incapacitated, move, and proficiency_check events added.&#10;&#10;functions:&#10;- TraitsBase.__init__() now calls ._install(), rather than .install()&#10;- .install() retagged to ._install()&#10;- ._install() now queried each functions that is registered with it for&#10;  methods with names that match event names, and installs them there when&#10;  found&#10;  &#10;  child install methods are handled by calling them as the last step of &#10;  this installation methof&#10;- .uninstall, same as happened to .install&#10;- .add_affector():&#10;  - very verbose debugging info added&#10;  - destination is now a string rather than the target reference&#10;- .remove_affector()&#10;  - very verbose debugging info added&#10;  - destination is now a string rather than the target reference&#10;- implemented: TraitAbilityScoreImprovement, DCThrow&#10;- TraitNaturalDefence&#10;  - trimmed the error handling - errors indicate there is a bug&#10;- ClassTraitRage:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - added a few more flags to its __init__&#10;  - stripped the now redundant install and uninstall functions&#10;  - added a little debug printing to trace its activities&#10;  - improved its logic somewhat&#10;- ClassTraitUnarmoredDefence:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - stripped the now redundant install and uninstall functions&#10;  - ensured equip_change is aliased to both equip and unequip&#10;  - appended *args, **kwargs to parameters for methods&#10;- ClassTraitRecklessAttack:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - stripped the now redundant install and uninstall functions&#10;  - littered it with debug print outs to trace its activities&#10;  - attack method implemented&#10;  - before_turn method implemented&#10;- implemented methods: ClassTraitExtraAttack, ClassTraitFastMovement, &#10;  ClassTraitFeralInstinct, ClassTraitBrutalCritical, RaceTraitLucky&#10;  &#10;misc:&#10;- Attack object now carries the critical multiplier as an attribute&#10;&#10;trace:&#10;- called_with() method implemented &#10;  - retrieves and cleans up the calling line of code two frames ago, &#10;    which for called with, is whoever called the frame that called this" />
    <MESSAGE value="Further implementation work on th events system, related triggers such &#10;as die rolls, incapacitation, preliminary work setting up statuses, and &#10;more barbarian traits.&#10;&#10;characterSheet:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- .__init__() now checks for needing to level up the character based on &#10;  given experience&#10;- .get_next_level_xp(): added a level 21 with absurd exp needs&#10;- expanded the debug block at the bottom of the file&#10;&#10;classes:&#10;- the barbarian now substitutes the rage traits as they level:&#10;  - persistent rage replaces relentless rage&#10;  - relentless rage replaces rage&#10;&#10;encounter:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- do_battle.print_parties() implemented rather than just a set of &#10;  statements at the start of do_battle().&#10;- when entity begins turn with hp&lt;=0 and incapacitated event is thrown, &#10;  if entity hp increases as a consequence, they are returned to their &#10;  party&#10;- added call to event.roll_attack()&#10;- added some more to the debug test block&#10;&#10;entity:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- now imports NamedTuple from dnd5e_misc&#10;- Entity.__init__():&#10;  - moved, changed, and renamed assignment statements for advantage, &#10;    disadvantage, damage_resist, damage_vulnerable, proficiency_skills, &#10;    temporary_hitpoints, actions, and status&#10;    - each was renamed from &lt;name&gt; to _&lt;name&gt;&#10;    - each occurs in a block at the very end now&#10;    - each assigns Event() rather than Event.none() now&#10;  - added assignment of a die(1,20) to self.d20&#10;  - added self.._immunity assignment as Event()&#10;- added @property and @var.setter functions for each of advantage, &#10;    disadvantage, damage_resist, damage_vulnerable, proficiency_skills, &#10;    temporary_hitpoints, actions, and status&#10;    - @property returns self._name.none&#10;    - @var.setter assigns to self._var.none&#10;- method is_lucky eliminated in favour of Lucky event function&#10;- reworked flow of _wpn, to utilise event.roll_damage()&#10;- renamed save_roll() to roll_dc()&#10;- reworked roll_dc to trigger event.roll_dc()&#10;&#10;enums:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- Ability now has protected attributes _max_&lt;var&gt; for each of STR, CON, &#10;  DEX, INT, WIS, and CHA.  That is, self._max_DEX now exists&#10;  - overloaded .__setattr__ to intercept assignments to apply the &#10;    limit(s) referenced in the new _max_ vars to attributes&#10;  - implemented a set_max() method to assign new values to the protected &#10;    maximums&#10;- TRAIT.Lucky now references a trait function&#10;- STATUS members have all now received preliminary implementations:&#10;  - all inherit from common Call class, which implements __call__ method&#10;    and creates self.affectors list&#10;  - all now have .__init__() methods&#10;  - added ENRAGED and FRENZIED statuses&#10;- DAMAGETYPE methods .__idiv__() and .__rdiv__() renamed to the correct &#10;  python 3.0 names .__itruediv__() and .__ifloordiv__(), respectively&#10;&#10;events:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- Event.Effects._none retagged to .none&#10;&#10;functions:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print() &#10;- TraitsBase._-init__()&#10;  - added reference to self.host.effects as self.events&#10;- implemented preliminary functions for Status&lt;stat&gt; where &lt;stat&gt; is an &#10;  element of this list:  Blinded, Charmed, Dead, Deafened, Frightened, &#10;  Grappled, Incapacitated, Invisible, Paralyzed, Petrified, Poisoned, &#10;  Prone, Restrained, Stunned, Unconscious, Enraged, Frenzied&#10;- fully implemented StatusExhausted - testing required&#10;- classTraitRage now has attributes since_last_attack, and &#10;  rage_length_max, both used to dynamically control the limits of rage&#10;  - now adds self to effects attribute of attack objects in attack event&#10;- ClassTraitRelentlessRage now inherits from ClassTraitRage, rather than &#10;  TraitsBase&#10;  - fully implemented methods for incapacitated, rest_long, and &#10;    rest_short events&#10;- ClassTraitPersistentRage now inherits form ClassTraitRelentlessRage, &#10;  rather than TraitsBase.&#10;  - sets since_last_attack and rage_length_max to 999999999&#10;- ClassTraitIndomitableMight now fully implemented&#10;- ClassTraitPrimalChampion now fully implemented&#10;- ClassTraitFrenzy now fully implemented&#10;- ClassTraitLucky now fully implemented&#10;- WeaponEffectsGSTQ2H implemented&#10;&#10;misc:&#10;- added a little debug block to use the trace print as debug()&#10;  - when false, is used as a conditional / dummy statement via lambda&#10;  - changed all debug prints to call debug() rather than print()&#10;- Attack: &#10;  - attack_die is now a class attribute, rather than instance&#10;  - get() method added, to allow searching the self.effects attribute, &#10;    for instantiated or uninstantiated instances of class objects&#10;  - self.roll method eliminated&#10;  - self.roll1 and self.roll2 attributes added.&#10;  - set_rolls() method added&#10;  - rolled_one() method eliminated&#10;&#10;weaponry:&#10;- now imports all from functions&#10;- Weaponry.roll() no returns None when no die, rather than zero&#10;- implemented GSTQ2H weapon" />
    <MESSAGE value="A big sideways push.  There is now a means to interactively create &#10;characters, rather than hardcoded characters only.&#10;&#10;classes:&#10;- expanded all class configs to carry a new attribute, skills_qty&#10;- appended the missing skills for the other classes(than barbarian)&#10;- added ability_suggest dict attribute&#10;- changed the barbarian to carry the whole trait set on the class level&#10;&#10;encounter:&#10;- now imports interactions&#10;- remembers the previous target&#10;- the debug code block now iters the potential actions a player could &#10;  take - this will be expanded to actually control an encounter if the &#10;  player is taking direct control.&#10;&#10;entity:&#10;- no longer imports Skill and Trait from enums&#10;- now imports a location object - will be put to use soon in carrying &#10;  positional data&#10;&#10;enums:&#10;- TRAIT.BRAVE now references a null function as a test case for &#10;  preliminary assignment without implementation&#10;- BACKGROUNDS now all have both SKILLS and TOOLS variables&#10;&#10;functions:&#10;- added class RaceTraitBrave(TraitsBase):pass to test non-implementation&#10;&#10;interactions:&#10;- entirely new&#10;  - new_user() spits out an informational string&#10;  - get_value_from_curve() takes a range, and deviation, throws a random &#10;    value in that range and returns the result&#10;  - getAbility() interacts directly with the user, to get an assignment&#10;    for the default array [15,14,13,12,10,8] to the ability scores&#10;  - new() spins up a new character, interacting with the user to make &#10;    the choices along the way.&#10;  - ActionHelp() gives a quick help output for combat actions you can &#10;    take -- almost entirely not implemented at current.&#10;  - print_choices(), a helper function that enumerates and linebreaks a &#10;    set of options&#10;  - get_implemented_names() takes a source, and destination, compares &#10;    them and reports on how thoroughly implemented the source is.&#10;  - ChooseCombatAction() is a preliminary top level turn control&#10;    function which will end up being the primary interaction with players&#10;    in encounters.&#10;&#10;misc:&#10;- a new class, Location, will eventually have a roll in entity positions&#10;- getint() shamelessly stole this from another project of mine&#10;- getstr() shamelessly stole this from another project of mine&#10;&#10;races:&#10;- races now have the age, height, and weight range information at the &#10;  class level, so its possible to place new characters on the range&#10;  before instantiating." />
    <MESSAGE value="Quick preparatory update - Ripped Encounter.do_battle to pieces.  This &#10;is the first step towards integrating choice of action, and terminal &#10;interaction with the do_battle function.&#10;&#10;actions:&#10;- new file, will be hosting all of the action specific code here.  &#10;  - do_battle's main loop is going to be moved here eventually&#10;  - some of do_battles helper functions will end up here eventually&#10;- dummy functions laid out&#10;&#10;encounter:&#10;- retagged player_party to party1&#10;- retagged hostile_party to party2&#10;- method generate_hostile():&#10;  - renamed to generate_party2&#10;  - no longer requires parameter difficulty&#10;- initiative list creation now wrapped in a method, before_battle()&#10;- player boolean eliminated, party # is a temporary self var of each &#10;  entity, assigned during creation of initiative list, removed at end &#10;  of encounter&#10;- entity target selection now wrapped in a method, get_target()&#10;- everything form target selection, to creation of the defend object now &#10;  wrapped in a method, attack_roll()&#10;- everything from creation of the defend object to hit decision now&#10;  wrapped in a method, target_defence()&#10;- target_ac &gt; attack_roll true case now wrapped in a method, miss()&#10;- target_ac &gt; attack_roll true case now wrapped in a method, target_hit()&#10;- new methods, before_battle, after_battle, target_defence, attack_roll,&#10;  get_target, target_hit, miss, incapacitate_target&#10;  &#10;functions:&#10;- TraitsBase methods add_affector and remove_affector moved outside&#10;  the class, wrapper of same name still held internally.&#10;  - Permits actions to use the affector system, without needing them to&#10;    be inheritors of TraitsBase.  Inheritors need only specify what the  &#10;    affector is and where it belongs.  Non-inheritors must also specify&#10;    the host and token," />
    <MESSAGE value="The brain-melty task of using the event system, from outside the event &#10;system, which is not really how I intended it when I made it, but how&#10;actions are clearly best handled, has been resolved.  Some minor changes&#10;resulted. &#10;&#10;Initial combat actions Dodge, and Assist are now ready to tie into &#10;Encounter.do_battle(), as is Attack which was the first one implemented.&#10;&#10;Work on implementing user interaction inside do_battle will now begin.&#10;&#10;The next step after terminal interaction to control battles, is creation&#10;of battles via terminal interaction, either as an auto fight vs creatures,&#10;an interactive fight vs creatures, or a duel vs other players.&#10;&#10;Following that will be tying terminal interactions, to the discord api.&#10;&#10;actions:&#10;- gave it the now standard trace.print debug init block&#10;- littered a few todo's&#10;- implemented CombatAssist&#10;- implemented CombatDodge&#10;- implemented a test block to verify functionality&#10;&#10;encounter:&#10;- do_battle no longer calls self.target_defence &#10;  or defence.get_armor_class()&#10;  - Now wrapped up inside of Encounter.attack_roll() method.&#10;- weapon damage is now set in two stages, giving defence events a chance&#10;  to edit the result before the critical multiplier is applied.&#10;&#10;events:&#10;- added another event category, battle_cleanup(), used to strip effects&#10;  which did not get a chance to remove themselves from characters&#10;&#10;functions:&#10;- kicked methods add_affector and remove_affector over to misc to resolve&#10;  a circular import issue.  They sort of belong in misc more anyways&#10;- all set.remove() calls replaced with set.discard(), remove throws an&#10;  exception if the item being removed is not found, discard does not.&#10; &#10;misc:&#10;- now has methods add_affector, and remove_affector, moved here from &#10;  functions" />
    <option name="LAST_COMMIT_MESSAGE" value="The brain-melty task of using the event system, from outside the event &#10;system, which is not really how I intended it when I made it, but how&#10;actions are clearly best handled, has been resolved.  Some minor changes&#10;resulted. &#10;&#10;Initial combat actions Dodge, and Assist are now ready to tie into &#10;Encounter.do_battle(), as is Attack which was the first one implemented.&#10;&#10;Work on implementing user interaction inside do_battle will now begin.&#10;&#10;The next step after terminal interaction to control battles, is creation&#10;of battles via terminal interaction, either as an auto fight vs creatures,&#10;an interactive fight vs creatures, or a duel vs other players.&#10;&#10;Following that will be tying terminal interactions, to the discord api.&#10;&#10;actions:&#10;- gave it the now standard trace.print debug init block&#10;- littered a few todo's&#10;- implemented CombatAssist&#10;- implemented CombatDodge&#10;- implemented a test block to verify functionality&#10;&#10;encounter:&#10;- do_battle no longer calls self.target_defence &#10;  or defence.get_armor_class()&#10;  - Now wrapped up inside of Encounter.attack_roll() method.&#10;- weapon damage is now set in two stages, giving defence events a chance&#10;  to edit the result before the critical multiplier is applied.&#10;&#10;events:&#10;- added another event category, battle_cleanup(), used to strip effects&#10;  which did not get a chance to remove themselves from characters&#10;&#10;functions:&#10;- kicked methods add_affector and remove_affector over to misc to resolve&#10;  a circular import issue.  They sort of belong in misc more anyways&#10;- all set.remove() calls replaced with set.discard(), remove throws an&#10;  exception if the item being removed is not found, discard does not.&#10; &#10;misc:&#10;- now has methods add_affector, and remove_affector, moved here from &#10;  functions" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/dnd5e_inventory.py</url>
          <line>10</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/dnd5e_status_effects.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="507">
          <caret line="39" column="25" selection-start-line="39" selection-start-column="25" selection-end-line="39" selection-end-column="25" />
          <folding>
            <element signature="e#0#13#0" expanded="true" />
            <element signature="e#1280#1325#0" expanded="true" />
            <element signature="e#1338#1586#0" expanded="true" />
            <element signature="e#3612#3868#0" expanded="true" />
            <element signature="e#2023#2072#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/enum.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="214">
          <caret line="346" lean-forward="true" selection-start-line="346" selection-end-line="346" />
          <folding>
            <element signature="e#13594#14106#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/json/encoder.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="201">
          <caret line="256" selection-start-line="256" selection-end-line="256" />
          <folding>
            <element signature="e#5744#6489#0" expanded="true" />
            <element signature="e#6395#6488#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/json/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="209">
          <caret line="230" selection-start-line="230" selection-end-line="230" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/encounter.py" />
    <entry file="file://$PROJECT_DIR$/dnd5e.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="26" column="20" lean-forward="true" selection-start-line="26" selection-start-column="20" selection-end-line="26" selection-end-column="20" />
          <folding>
            <element signature="e#0#13#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/random.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="209">
          <caret line="260" selection-start-line="260" selection-end-line="260" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/missile.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="143">
          <caret line="27" lean-forward="true" selection-start-line="27" selection-end-line="27" />
          <folding>
            <element signature="e#0#37#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/_pydev_imps/_pydev_execfile.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="221">
          <caret line="17" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_interactions" />
    <entry file="file://$PROJECT_DIR$/dnd5e_weaponry.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="70" selection-start-line="70" selection-end-line="91" />
          <folding>
            <element signature="e#0#27#0" expanded="true" />
            <element signature="e#1295#2638#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/discord bot/discord_bot_test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <folding>
            <element signature="e#0#46#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/trace.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="26" column="4" selection-start-line="26" selection-start-column="4" selection-end-line="26" selection-end-column="22" />
          <folding>
            <element signature="e#0#39#0" expanded="true" />
            <element signature="e#258#350#0" expanded="true" />
            <element signature="e#376#645#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_functions_and_enums.py">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret lean-forward="true" />
          <folding>
            <element signature="e#652#949#0" expanded="true" />
            <element signature="e#1044#1063#0" expanded="true" />
            <element signature="e#2775#3666#0" expanded="true" />
            <element signature="e#3716#3990#0" expanded="true" />
            <element signature="e#4033#4108#0" expanded="true" />
            <element signature="e#4216#4409#0" expanded="true" />
            <element signature="e#4517#4716#0" expanded="true" />
            <element signature="e#4750#5102#0" expanded="true" />
            <element signature="e#4801#5084#0" expanded="true" />
            <element signature="e#5139#5281#0" expanded="true" />
            <element signature="e#6039#6058#0" expanded="true" />
            <element signature="e#6122#6141#0" expanded="true" />
            <element signature="e#6202#6221#0" expanded="true" />
            <element signature="e#6282#6301#0" expanded="true" />
            <element signature="e#6361#6380#0" expanded="true" />
            <element signature="e#6441#6460#0" expanded="true" />
            <element signature="e#6527#6546#0" expanded="true" />
            <element signature="e#6606#6625#0" expanded="true" />
            <element signature="e#6687#6706#0" expanded="true" />
            <element signature="e#6775#6794#0" expanded="true" />
            <element signature="e#6855#6874#0" expanded="true" />
            <element signature="e#6936#6955#0" expanded="true" />
            <element signature="e#7019#7038#0" expanded="true" />
            <element signature="e#7100#7119#0" expanded="true" />
            <element signature="e#7182#7201#0" expanded="true" />
            <element signature="e#7267#7286#0" expanded="true" />
            <element signature="e#7351#7370#0" expanded="true" />
            <element signature="e#7434#7453#0" expanded="true" />
            <element signature="e#12738#12757#0" expanded="true" />
            <element signature="e#23093#23210#0" expanded="true" />
            <element signature="e#23269#23295#0" expanded="true" />
            <element signature="e#48806#49101#0" expanded="true" />
            <element signature="e#49152#49645#0" expanded="true" />
            <element signature="e#49698#50080#0" expanded="true" />
            <element signature="e#50131#50184#0" expanded="true" />
            <element signature="e#50238#50294#0" expanded="true" />
            <element signature="e#56080#56113#0" expanded="true" />
            <element signature="e#56165#56273#0" expanded="true" />
            <element signature="e#56362#56395#0" expanded="true" />
            <element signature="e#56447#56553#0" expanded="true" />
            <element signature="e#56640#56673#0" expanded="true" />
            <element signature="e#56725#56827#0" expanded="true" />
            <element signature="e#56917#57041#0" expanded="true" />
            <element signature="e#57090#57553#0" expanded="true" />
            <element signature="e#57605#57770#0" expanded="true" />
            <element signature="e#57823#58119#0" expanded="true" />
            <element signature="e#58208#58270#0" expanded="true" />
            <element signature="e#58322#58395#0" expanded="true" />
            <element signature="e#58443#58530#0" expanded="true" />
            <element signature="e#58579#58709#0" expanded="true" />
            <element signature="e#58763#58854#0" expanded="true" />
            <element signature="e#58974#59007#0" expanded="true" />
            <element signature="e#59059#59163#0" expanded="true" />
            <element signature="e#59256#59289#0" expanded="true" />
            <element signature="e#59341#59455#0" expanded="true" />
            <element signature="e#59543#59576#0" expanded="true" />
            <element signature="e#59628#59732#0" expanded="true" />
            <element signature="e#59822#59855#0" expanded="true" />
            <element signature="e#59907#60015#0" expanded="true" />
            <element signature="e#60083#60145#0" expanded="true" />
            <element signature="e#60807#62760#0" expanded="true" />
            <element signature="e#64454#64516#0" expanded="true" />
            <element signature="e#65743#66373#0" expanded="true" />
            <element signature="e#66425#66610#0" expanded="true" />
            <element signature="e#67228#67524#0" expanded="true" />
            <element signature="e#68120#68905#0" expanded="true" />
            <element signature="e#69012#69510#0" expanded="true" />
            <element signature="e#69362#69492#0" expanded="true" />
            <element signature="e#69565#70039#0" expanded="true" />
            <element signature="e#69894#70021#0" expanded="true" />
            <element signature="e#72282#72546#0" expanded="true" />
            <element signature="e#72366#72458#0" expanded="true" />
            <element signature="e#72595#72683#0" expanded="true" />
            <element signature="e#72738#73018#0" expanded="true" />
            <element signature="e#74242#75149#0" expanded="true" />
            <element signature="e#75674#76423#0" expanded="true" />
            <element signature="e#77389#77692#0" expanded="true" />
            <element signature="e#78304#78585#0" expanded="true" />
            <element signature="e#78980#79232#0" expanded="true" />
            <element signature="e#79284#79552#0" expanded="true" />
            <element signature="e#79481#79501#0" expanded="true" />
            <element signature="e#79606#79681#0" expanded="true" />
            <element signature="e#85077#85209#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_armor.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="130">
          <caret line="10" column="40" selection-start-line="10" selection-start-column="40" selection-end-line="10" selection-end-column="40" />
          <folding>
            <element signature="e#0#27#0" expanded="true" />
            <element signature="e#1053#1393#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_items.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="65">
          <caret line="5" column="11" lean-forward="true" selection-start-line="5" selection-start-column="11" selection-end-line="5" selection-end-column="11" />
          <folding>
            <element signature="e#450#603#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_classes.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="13">
          <caret line="1" column="25" selection-start-line="1" selection-start-column="25" selection-end-line="1" selection-end-column="25" />
          <folding>
            <element signature="e#0#25#0" expanded="true" />
            <element signature="e#1301#1511#0" expanded="true" />
            <element signature="e#1722#1884#0" expanded="true" />
            <element signature="e#2040#2174#0" expanded="true" />
            <element signature="e#2288#3160#0" expanded="true" />
            <element signature="e#2998#3236#0" expanded="true" />
            <element signature="e#3330#7646#0" expanded="true" />
            <element signature="e#9225#9463#0" expanded="true" />
            <element signature="e#9502#9663#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_events.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="185">
          <caret line="96" column="65" selection-start-line="96" selection-start-column="65" selection-end-line="96" selection-end-column="65" />
          <folding>
            <element signature="e#0#9#0" expanded="true" />
            <element signature="e#2365#3496#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_enums.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="314">
          <caret line="384" column="49" selection-start-line="384" selection-start-column="49" selection-end-line="384" selection-end-column="49" />
          <folding>
            <element signature="e#53#78#0" expanded="true" />
            <element signature="e#599#848#0" expanded="true" />
            <element signature="e#943#962#0" expanded="true" />
            <element signature="e#1095#1114#0" expanded="true" />
            <element signature="e#2674#3565#0" expanded="true" />
            <element signature="e#3615#3889#0" expanded="true" />
            <element signature="e#3932#4007#0" expanded="true" />
            <element signature="e#4115#4308#0" expanded="true" />
            <element signature="e#4416#4615#0" expanded="true" />
            <element signature="e#4644#4970#0" expanded="true" />
            <element signature="e#4701#4954#0" expanded="true" />
            <element signature="e#4976#5118#0" expanded="true" />
            <element signature="e#5929#5979#0" expanded="true" />
            <element signature="e#5959#5978#0" expanded="true" />
            <element signature="e#6039#6058#0" expanded="true" />
            <element signature="e#6119#6138#0" expanded="true" />
            <element signature="e#6198#6217#0" expanded="true" />
            <element signature="e#6278#6297#0" expanded="true" />
            <element signature="e#6364#6383#0" expanded="true" />
            <element signature="e#6443#6462#0" expanded="true" />
            <element signature="e#6524#6543#0" expanded="true" />
            <element signature="e#6612#6631#0" expanded="true" />
            <element signature="e#6692#6711#0" expanded="true" />
            <element signature="e#6773#6792#0" expanded="true" />
            <element signature="e#6856#6875#0" expanded="true" />
            <element signature="e#6937#6956#0" expanded="true" />
            <element signature="e#7019#7038#0" expanded="true" />
            <element signature="e#7104#7123#0" expanded="true" />
            <element signature="e#7188#7207#0" expanded="true" />
            <element signature="e#7271#7290#0" expanded="true" />
            <element signature="e#12575#12594#0" expanded="true" />
            <element signature="e#13721#13768#0" expanded="true" />
            <element signature="e#22692#22803#0" expanded="true" />
            <element signature="e#22862#22888#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_inventory.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="127">
          <caret line="10" selection-start-line="10" selection-end-line="10" />
          <folding>
            <element signature="e#0#33#0" expanded="true" />
            <element signature="e#1150#2440#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_entity.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="779">
          <caret line="220" column="77" lean-forward="true" selection-start-line="220" selection-start-column="77" selection-end-line="220" selection-end-column="77" />
          <folding>
            <element signature="e#88#146#0" expanded="true" />
            <element signature="e#740#3347#0" expanded="true" />
            <element signature="e#1106#1427#0" expanded="true" />
            <element signature="e#6216#7043#0" expanded="true" />
            <element signature="e#7445#7570#0" expanded="true" />
            <element signature="e#9092#9270#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_misc.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="147">
          <caret line="178" lean-forward="true" selection-start-line="178" selection-end-line="178" />
          <folding>
            <element signature="e#4940#5817#0" expanded="true" />
            <element signature="e#7025#7770#0" expanded="true" />
            <element signature="e#7824#8620#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_creatures.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="91">
          <caret line="7" column="36" lean-forward="true" selection-start-line="7" selection-start-column="36" selection-end-line="7" selection-end-column="36" />
          <folding>
            <element signature="e#0#27#0" expanded="true" />
            <element signature="e#690#1668#0" expanded="true" />
            <element signature="e#4886#7431#0" expanded="true" />
            <element signature="e#5906#7360#0" expanded="true" />
            <element signature="e#7515#9664#0" expanded="true" />
            <element signature="e#7737#7847#0" expanded="true" />
            <element signature="e#8518#9593#0" expanded="true" />
            <element signature="e#8627#8981#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_character_sheet.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="33" column="47" lean-forward="true" selection-start-line="33" selection-start-column="47" selection-end-line="33" selection-end-column="47" />
          <folding>
            <element signature="e#9136#10433#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_actions.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="52">
          <caret line="4" column="32" lean-forward="true" selection-start-line="4" selection-start-column="32" selection-end-line="4" selection-end-column="32" />
          <folding>
            <element signature="e#105#113#0" expanded="true" />
            <element signature="e#355#427#0" expanded="true" />
            <element signature="e#453#538#0" expanded="true" />
            <element signature="e#563#625#0" expanded="true" />
            <element signature="e#965#1950#0" expanded="true" />
            <element signature="e#1281#1378#0" expanded="true" />
            <element signature="e#1537#1593#0" expanded="true" />
            <element signature="e#2162#3275#0" expanded="true" />
            <element signature="e#2431#2548#0" expanded="true" />
            <element signature="e#2521#2692#0" expanded="true" />
            <element signature="e#2745#2836#0" expanded="true" />
            <element signature="e#2851#2855#0" expanded="true" />
            <element signature="e#3106#3110#0" expanded="true" />
            <element signature="e#3247#3251#0" expanded="true" />
            <element signature="e#2929#3186#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_races.py">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <folding>
            <element signature="e#111#126#0" expanded="true" />
            <element signature="e#160#468#0" expanded="true" />
            <element signature="e#548#811#0" expanded="true" />
            <element signature="e#4470#4521#0" expanded="true" />
            <element signature="e#4938#4989#0" expanded="true" />
            <element signature="e#5181#5233#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_interactions.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="117">
          <caret line="9" column="27" lean-forward="true" selection-start-line="9" selection-start-column="27" selection-end-line="9" selection-end-column="27" />
          <folding>
            <element signature="e#0#39#0" expanded="true" />
            <element signature="e#2242#2625#0" expanded="true" />
            <element signature="e#2662#4028#0" expanded="true" />
            <element signature="e#4046#9248#0" expanded="true" />
            <element signature="e#9296#10017#0" expanded="true" />
            <element signature="e#10012#10793#0" expanded="true" />
            <element signature="e#10841#13254#0" expanded="true" />
            <element signature="e#10988#11455#0" expanded="true" />
            <element signature="e#11176#11350#0" expanded="true" />
            <element signature="e#11492#12558#0" expanded="true" />
            <element signature="e#11499#11611#0" expanded="true" />
            <element signature="e#12604#13069#0" expanded="true" />
            <element signature="e#13297#13567#0" expanded="true" />
            <element signature="e#13602#13817#0" expanded="true" />
            <element signature="e#13849#14034#0" expanded="true" />
            <element signature="e#14328#16245#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_functions.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="173">
          <caret line="675" column="27" selection-start-line="675" selection-start-column="27" selection-end-line="675" selection-end-column="27" />
          <folding>
            <element signature="e#362#389#0" expanded="true" />
            <element signature="e#3744#4039#0" expanded="true" />
            <element signature="e#4636#5018#0" expanded="true" />
            <element signature="e#5069#5116#0" expanded="true" />
            <element signature="e#5170#5220#0" expanded="true" />
            <element signature="e#9936#10038#0" expanded="true" />
            <element signature="e#11006#11039#0" expanded="true" />
            <element signature="e#11067#11174#0" expanded="true" />
            <element signature="e#11288#11321#0" expanded="true" />
            <element signature="e#11317#11423#0" expanded="true" />
            <element signature="e#11566#11599#0" expanded="true" />
            <element signature="e#11563#11665#0" expanded="true" />
            <element signature="e#11837#11961#0" expanded="true" />
            <element signature="e#12019#12444#0" expanded="true" />
            <element signature="e#12352#12517#0" expanded="true" />
            <element signature="e#12847#12935#0" expanded="true" />
            <element signature="e#12686#12982#0" expanded="true" />
            <element signature="e#13017#13079#0" expanded="true" />
            <element signature="e#13131#13198#0" expanded="true" />
            <element signature="e#13724#13820#0" expanded="true" />
            <element signature="e#13251#13304#0" expanded="true" />
            <element signature="e#13343#13473#0" expanded="true" />
            <element signature="e#13527#13578#0" expanded="true" />
            <element signature="e#12355#12388#0" expanded="true" />
            <element signature="e#13419#13523#0" expanded="true" />
            <element signature="e#12481#12514#0" expanded="true" />
            <element signature="e#13701#13815#0" expanded="true" />
            <element signature="e#15072#15198#0" expanded="true" />
            <element signature="e#12602#12635#0" expanded="true" />
            <element signature="e#13988#14092#0" expanded="true" />
            <element signature="e#15511#15631#0" expanded="true" />
            <element signature="e#13254#13287#0" expanded="true" />
            <element signature="e#14740#14848#0" expanded="true" />
            <element signature="e#16006#16136#0" expanded="true" />
            <element signature="e#14892#16032#0" expanded="true" />
            <element signature="e#10998#11060#0" expanded="true" />
            <element signature="e#11722#13627#0" expanded="true" />
            <element signature="e#15321#15383#0" expanded="true" />
            <element signature="e#16610#17234#0" expanded="true" />
            <element signature="e#18180#18365#0" expanded="true" />
            <element signature="e#24050#24181#0" expanded="true" />
            <element signature="e#20605#20928#0" expanded="true" />
            <element signature="e#18958#19272#0" expanded="true" />
            <element signature="e#19327#20088#0" expanded="true" />
            <element signature="e#20195#20572#0" expanded="true" />
            <element signature="e#24270#24401#0" expanded="true" />
            <element signature="e#27352#27796#0" expanded="true" />
            <element signature="e#24803#24931#0" expanded="true" />
            <element signature="e#26105#26336#0" expanded="true" />
            <element signature="e#21512#21614#0" expanded="true" />
            <element signature="e#21667#21828#0" expanded="true" />
            <element signature="e#24138#24396#0" expanded="true" />
            <element signature="e#23310#23396#0" expanded="true" />
            <element signature="e#30178#30288#0" expanded="true" />
            <element signature="e#23524#23612#0" expanded="true" />
            <element signature="e#23667#23935#0" expanded="true" />
            <element signature="e#25159#26018#0" expanded="true" />
            <element signature="e#26543#27262#0" expanded="true" />
            <element signature="e#28228#28525#0" expanded="true" />
            <element signature="e#29137#29412#0" expanded="true" />
            <element signature="e#29807#30059#0" expanded="true" />
            <element signature="e#31032#31316#0" expanded="true" />
            <element signature="e#31228#31248#0" expanded="true" />
            <element signature="e#30354#30423#0" expanded="true" />
            <element signature="e#35819#35951#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_encounter.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="160">
          <caret line="394" column="26" selection-start-line="394" selection-start-column="26" selection-end-line="394" selection-end-column="26" />
          <folding>
            <element signature="e#36#77#0" expanded="true" />
            <element signature="e#398#489#0" expanded="true" />
            <element signature="e#453#498#0" expanded="true" />
            <element signature="e#577#627#0" expanded="true" />
            <element signature="e#657#681#0" expanded="true" />
            <element signature="e#783#827#0" expanded="true" />
            <element signature="e#864#908#0" expanded="true" />
            <element signature="e#941#1281#0" expanded="true" />
            <element signature="e#1815#2260#0" expanded="true" />
            <element signature="e#2625#8012#0" expanded="true" />
            <element signature="e#8226#8550#0" expanded="true" />
            <element signature="e#8375#9449#0" expanded="true" />
            <element signature="e#10652#10968#0" expanded="true" />
            <element signature="e#11046#13548#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>