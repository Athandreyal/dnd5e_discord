<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ce54a110-60b4-4b2f-b783-675197c55daf" name="Default Changelist" comment="progress update - the event system has gained some further refinements, &#10;  some bug's have gotten squashed as they were encountered, and a large&#10;  degree of trace capability was introduced to ease further debugging.&#10;  &#10;It is very verbose right now, due to all of the debug printouts...VERY  &#10;  &#10;armor:&#10;- .flags attribute removed&#10;- Plate armor weight fixed, its not 7 lbs, its 65 lbs&#10;- breastplate added to aid in testing the Rage trait&#10;&#10;character_sheet:&#10;- .__init__() parameters now include unspent points from leveling up&#10;  - passed value to Entity via super().__init__ parameter&#10;- .level_up() now checks for, and passes unspent points for the re-init&#10;- .get_armor_class() is testing armor.enum_type now, not armor.flags&#10;- test function init_wulfgar now uses breastplate instead of plate.&#10;&#10;encounter:&#10;- murdered a sizeable amount of commented code.&#10;- re-organised a few things that aren't order dependent to be first&#10;- added a before/after turn debug print&#10;- added a few more event triggers&#10;&#10;entity:&#10;- Entity.__init__() parameters now includes unspent ability points&#10;- .status and .unspent_ability attributes added&#10;- equip and unequip events added to the equip and unequip wrapper funcs&#10;- .save_roll() added, yielding a common place to trigger events from.&#10;&#10;enums:&#10;- the SKILL enum's members are now instantiatable, with affectors&#10;&#10;events:&#10;- Event.Effect.__call__() now responds with debug info:&#10;  - the line of code it was called with&#10;  - the event name, host name, and affector&#10;- incapacitated, move, and proficiency_check events added.&#10;&#10;functions:&#10;- TraitsBase.__init__() now calls ._install(), rather than .install()&#10;- .install() retagged to ._install()&#10;- ._install() now queried each functions that is registered with it for&#10;  methods with names that match event names, and installs them there when&#10;  found&#10;  &#10;  child install methods are handled by calling them as the last step of &#10;  this installation methof&#10;- .uninstall, same as happened to .install&#10;- .add_affector():&#10;  - very verbose debugging info added&#10;  - destination is now a string rather than the target reference&#10;- .remove_affector()&#10;  - very verbose debugging info added&#10;  - destination is now a string rather than the target reference&#10;- implemented: TraitAbilityScoreImprovement, DCThrow&#10;- TraitNaturalDefence&#10;  - trimmed the error handling - errors indicate there is a bug&#10;- ClassTraitRage:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - added a few more flags to its __init__&#10;  - stripped the now redundant install and uninstall functions&#10;  - added a little debug printing to trace its activities&#10;  - improved its logic somewhat&#10;- ClassTraitUnarmoredDefence:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - stripped the now redundant install and uninstall functions&#10;  - ensured equip_change is aliased to both equip and unequip&#10;  - appended *args, **kwargs to parameters for methods&#10;- ClassTraitRecklessAttack:&#10;  - trimmed the error handling - errors indicate there is a bug&#10;  - stripped the now redundant install and uninstall functions&#10;  - littered it with debug print outs to trace its activities&#10;  - attack method implemented&#10;  - before_turn method implemented&#10;- implemented methods: ClassTraitExtraAttack, ClassTraitFastMovement, &#10;  ClassTraitFeralInstinct, ClassTraitBrutalCritical, RaceTraitLucky&#10;  &#10;misc:&#10;- Attack object now carries the critical multiplier as an attribute&#10;&#10;trace:&#10;- called_with() method implemented &#10;  - retrieves and cleans up the calling line of code two frames ago, &#10;    which for called with, is whoever called the frame that called this">
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_armor.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_armor.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_character_sheet.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_character_sheet.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_encounter.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_encounter.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_entity.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_entity.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_enums.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_enums.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_events.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_events.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_functions.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_functions.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dnd5e_misc.py" beforeDir="false" afterPath="$PROJECT_DIR$/dnd5e_misc.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/trace.py" beforeDir="false" afterPath="$PROJECT_DIR$/trace.py" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/dnd5e_encounter.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="370">
              <caret line="305" column="102" selection-start-line="305" selection-start-column="102" selection-end-line="305" selection-end-column="102" />
              <folding>
                <element signature="e#36#77#0" expanded="true" />
                <element signature="e#208#233#0" expanded="true" />
                <element signature="e#263#308#0" expanded="true" />
                <element signature="e#1319#1794#0" expanded="true" />
                <element signature="e#1829#9244#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_enums.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="356">
              <caret line="273" lean-forward="true" selection-start-line="273" selection-end-line="273" />
              <folding>
                <element signature="e#0#25#0" expanded="true" />
                <element signature="e#451#700#0" expanded="true" />
                <element signature="e#795#814#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_classes.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="825">
              <caret line="94" column="42" lean-forward="true" selection-start-line="94" selection-start-column="42" selection-end-line="94" selection-end-column="42" />
              <folding>
                <element signature="e#0#25#0" expanded="true" />
                <element signature="e#1301#1511#0" expanded="true" />
                <element signature="e#1729#1879#0" expanded="true" />
                <element signature="e#1940#2062#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_inventory.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="377">
              <caret line="40" column="47" lean-forward="true" selection-start-line="40" selection-start-column="47" selection-end-line="40" selection-end-column="47" />
              <folding>
                <element signature="e#0#33#0" expanded="true" />
                <element signature="e#238#584#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_functions.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="396">
              <caret line="138" column="32" lean-forward="true" selection-start-line="138" selection-start-column="32" selection-end-line="138" selection-end-column="32" />
              <folding>
                <element signature="e#240#267#0" expanded="true" />
                <element signature="e#2454#2768#0" expanded="true" />
                <element signature="e#2743#3292#0" expanded="true" />
                <element signature="e#2757#2958#0" expanded="true" />
                <element signature="e#3328#3709#0" expanded="true" />
                <element signature="e#3760#4535#0" expanded="true" />
                <element signature="e#4074#4705#0" expanded="true" />
                <element signature="e#6845#6890#0" expanded="true" />
                <element signature="e#6477#6556#0" expanded="true" />
                <element signature="e#7121#7223#0" expanded="true" />
                <element signature="e#7273#7496#0" expanded="true" />
                <element signature="e#5698#6156#0" expanded="true" />
                <element signature="e#7831#7882#0" expanded="true" />
                <element signature="e#7104#7190#0" expanded="true" />
                <element signature="e#9292#9847#0" expanded="true" />
                <element signature="e#3671#3875#0" expanded="true" />
                <element signature="e#3915#4010#0" expanded="true" />
                <element signature="e#8571#8674#0" expanded="true" />
                <element signature="e#10733#11393#0" expanded="true" />
                <element signature="e#7474#7548#0" expanded="true" />
                <element signature="e#7492#7692#0" expanded="true" />
                <element signature="e#11509#12127#0" expanded="true" />
                <element signature="e#12227#13351#0" expanded="true" />
                <element signature="e#8991#9010#0" expanded="true" />
                <element signature="e#9054#9191#0" expanded="true" />
                <element signature="e#9976#10162#0" expanded="true" />
                <element signature="e#10251#10358#0" expanded="true" />
                <element signature="e#13119#13200#0" expanded="true" />
                <element signature="e#10863#10874#0" expanded="true" />
                <element signature="e#13070#13386#0" expanded="true" />
                <element signature="e#13995#14059#0" expanded="true" />
                <element signature="e#14113#14207#0" expanded="true" />
                <element signature="e#14327#14531#0" expanded="true" />
                <element signature="e#14518#14918#0" expanded="true" />
                <element signature="e#14978#15106#0" expanded="true" />
                <element signature="e#16811#17560#0" expanded="true" />
                <element signature="e#15526#15559#0" expanded="true" />
                <element signature="e#15614#15704#0" expanded="true" />
                <element signature="e#15922#16028#0" expanded="true" />
                <element signature="e#18186#18904#0" expanded="true" />
                <element signature="e#16796#16996#0" expanded="true" />
                <element signature="e#17050#17163#0" expanded="true" />
                <element signature="e#17259#17312#0" expanded="true" />
                <element signature="e#17833#17994#0" expanded="true" />
                <element signature="e#20348#20381#0" expanded="true" />
                <element signature="e#20415#20453#0" expanded="true" />
                <element signature="e#20502#20535#0" expanded="true" />
                <element signature="e#20605#20806#0" expanded="true" />
                <element signature="e#20589#20624#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_armor.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="221">
              <caret line="17" selection-start-line="17" selection-end-line="17" />
              <folding>
                <element signature="e#0#27#0" expanded="true" />
                <element signature="e#1087#1427#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/trace.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="151">
              <caret line="27" lean-forward="true" selection-start-line="27" selection-end-line="27" />
              <folding>
                <element signature="e#0#39#0" expanded="true" />
                <element signature="e#258#350#0" expanded="true" />
                <element signature="e#376#645#0" expanded="true" />
                <element signature="e#733#861#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_events.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-141">
              <caret line="75" selection-start-line="75" selection-end-line="75" />
              <folding>
                <element signature="e#0#9#0" expanded="true" />
                <element signature="e#1973#3041#0" expanded="true" />
                <element signature="e#2064#2150#0" expanded="true" />
                <element signature="e#2542#2559#0" expanded="true" />
                <element signature="e#2709#4052#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_entity.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="540">
              <caret line="72" column="75" lean-forward="true" selection-start-line="72" selection-start-column="75" selection-end-line="72" selection-end-column="75" />
              <folding>
                <element signature="e#88#135#0" expanded="true" />
                <element signature="e#516#2654#0" expanded="true" />
                <element signature="e#3202#3267#0" expanded="true" />
                <element signature="e#6207#6403#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/dnd5e_character_sheet.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="170">
              <caret line="251" lean-forward="true" selection-start-line="251" selection-end-line="251" />
              <folding>
                <element signature="e#0#27#0" expanded="true" />
                <element signature="e#654#2787#0" expanded="true" />
                <element signature="e#3061#3887#0" expanded="true" />
                <element signature="e#4487#6856#0" expanded="true" />
                <element signature="e#7282#8691#0" expanded="true" />
                <element signature="e#8745#9992#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>': [</find>
      <find>deadly</find>
      <find>DRACON_</find>
      <find>Damage</find>
      <find>def __init__(self): super().__init__()</find>
      <find>ability_mod(</find>
      <find>print(weapon</find>
      <find>print(</find>
      <find>saving_</find>
      <find>def __init__(self): pass</find>
      <find>: None</find>
      <find>def</find>
      <find>(*args, **kwargs):</find>
      <find>def __next__(self): super().__init__()</find>
      <find>def __next__(self):</find>
      <find>def __next__(self):</find>
      <find>super().__init__(</find>
      <find>class</find>
      <find>function_ =</find>
      <find>.add(</find>
      <find>DEFENCE</find>
      <find>percei</find>
      <find>, child=self</find>
      <find>(self)</find>
      <find>(self):</find>
      <find>DangerSense</find>
      <find>Rec</find>
      <find>], stack[</find>
      <find>*****</find>
      <find>****</find>
    </findStrings>
    <replaceStrings>
      <replace>]</replace>
      <replace>(</replace>
      <replace>)</replace>
      <replace>self.lvl = 1</replace>
      <replace>\t.\t</replace>
      <replace>TOOLS.</replace>
      <replace>functions.roll(</replace>
      <replace>functions.roll</replace>
      <replace>Functions.Die</replace>
      <replace>functions.</replace>
      <replace>.update({</replace>
      <replace>self.traits.update({</replace>
      <replace>{</replace>
      <replace>}</replace>
      <replace>set()</replace>
      <replace>update</replace>
      <replace>= {</replace>
      <replace>Deadly</replace>
      <replace>DRACONIC_</replace>
      <replace>def __init__(self, damage): super().__init__(damage)</replace>
      <replace>misc.ability_mod(</replace>
      <replace>def __init__(self, parent): pass</replace>
      <replace>: pass</replace>
      <replace>class</replace>
      <replace>(TraitsBase):</replace>
      <replace>function_ =</replace>
      <replace>.remove(</replace>
      <replace>(self, *args, **kwargs):</replace>
      <replace>], '\n\t', stack[</replace>
      <replace>.enum_type</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Athandreyal &lt;darkprev@hotmail.com&gt;" />
        <option value="Athandreyal" />
      </list>
    </option>
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/dnd5e_status_effects.py" />
        <option value="$PROJECT_DIR$/dnd5e_weaponry" />
        <option value="$PROJECT_DIR$/armor.py" />
        <option value="$PROJECT_DIR$/dnd5e.py" />
        <option value="$PROJECT_DIR$/encounter.py" />
        <option value="$PROJECT_DIR$/dnd5e_races.py" />
        <option value="$PROJECT_DIR$/dnd5e_character_classes.py" />
        <option value="$PROJECT_DIR$/dnd5e_Events.py" />
        <option value="$PROJECT_DIR$/dnd5e_creatures.py" />
        <option value="$PROJECT_DIR$/dnd5e_items.py" />
        <option value="$PROJECT_DIR$/dnd5e_inventory.py" />
        <option value="$PROJECT_DIR$/dnd5e_weaponry.py" />
        <option value="$PROJECT_DIR$/dnd5e_misc.py" />
        <option value="$PROJECT_DIR$/dnd5e_classes.py" />
        <option value="$PROJECT_DIR$/dnd5e_entity.py" />
        <option value="$PROJECT_DIR$/dnd5e_armor.py" />
        <option value="$PROJECT_DIR$/dnd5e_character_sheet.py" />
        <option value="$PROJECT_DIR$/dnd5e_enums.py" />
        <option value="$PROJECT_DIR$/trace.py" />
        <option value="$PROJECT_DIR$/dnd5e_events.py" />
        <option value="$PROJECT_DIR$/dnd5e_functions.py" />
        <option value="$PROJECT_DIR$/dnd5e_encounter.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="172" />
    <option name="y" value="275" />
    <option name="width" value="1658" />
    <option name="height" value="1000" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="dnd5e_discord" type="b2602c69:ProjectViewProjectNode" />
              <item name="dnd5e_discord" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="C:/Program Files/Git/bin/git.exe" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings is-module-sdk="true">
        <option name="myUseModuleSdk" value="true" />
      </console-settings>
    </option>
  </component>
  <component name="PyDebuggerOptionsProvider">
    <option name="mySaveCallSignatures" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.dnd5e_encounter">
    <configuration name="dnd5e_encounter" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_encounter.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_entity" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_entity.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_enums" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_enums.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_events" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_events.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="dnd5e_functions" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="DnD 5e" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/dnd5e_functions.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.dnd5e_encounter" />
        <item itemvalue="Python.dnd5e_events" />
        <item itemvalue="Python.dnd5e_functions" />
        <item itemvalue="Python.dnd5e_enums" />
        <item itemvalue="Python.dnd5e_entity" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ce54a110-60b4-4b2f-b783-675197c55daf" name="Default Changelist" comment="" />
      <created>1558021764918</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1558021764918</updated>
    </task>
    <task id="LOCAL-00001" summary="character_classes.py&#10;    renamed weaponry.attackDie to attack_die&#10;    renamed CharacterSheet.__repr__ to full_str&#10;    implemented characterSheet.melee_attack(self)&#10;        - runs over equipped weapons, returns a dict with:&#10;            - num: the number of attacks the character makes&#10;            - effects: the effects to be applied to the attacked target&#10;            - calculation: a damage function for the weapon:&#10;                - this is to include character/class/race relevant bonus&#10;            - weapons: the weaponry involved:&#10;                - conveys the damage effects, and weapon attack function&#10;        soon to make a similar variant for creature, given its somewhat &#10;        more limited complexity&#10;    wrapped some testing/debug behind if name==main block&#10;creatures.py:&#10;    nothing important, just killed some whitespace&#10;encounter.py:&#10;    further work towards implementing do_battle()&#10;enums.py:&#10;    changed DAMAGETYPE subclasses to take arguments&#10;        - can now instantiate self with given damage value &#10;    a couple debug outs I haven't murdered yet.&#10;functions.py:&#10;    dtypes no longer passed to GenericMelee.__init__()&#10;    dtypes no longer a self value of GenericMelee.__init__()&#10;        - contained within the weapon itself, &#10;          or applied by its attack function, not needed here.&#10;misc.py:&#10;    implemented a wrapper to call random as Die.random(self, upper) &#10;    wrapped some testing/debug behind if name==main block&#10;weaponry.py:&#10;    as mentioned in character_classes, renamed .attackDie to .attack_die&#10;    renamed equipFuntion to equip_function">
      <created>1558470700208</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1558470700208</updated>
    </task>
    <task id="LOCAL-00002" summary="Simple Melee combat at last!&#10;&#10;its come a long way, and it finally meets milestone 1, I can init a&#10;player, and some creatures, and they can try to kill eachother.&#10;&#10;renamed the file character_classes to character_sheet&#10;&#10;character_sheet:&#10;- moved init_wulfgar function to the end, so its out of the way&#10;- pushed the Equipment class out to its own file&#10;- pushed the events class out to its own file&#10;- added .is_lucky()&#10;- added .get_next_level_xp()&#10;- finished reworking get_attack&#10;- pushed __LINE__ debug function to its own file&#10;&#10;classes:&#10;- removed the hitpoints_lvl1, its set under character_sheet with hit_die&#10;&#10;creatures:&#10;- retagged the alias for dnd5e_weaponry to weaponry as I do elsewhere&#10;- gave creatures the equipment class, so they use same methods as player&#10;- changes default (dis)advantage vars to set() from None&#10;- added .atk_bonus and .effects vars&#10;- removed .check_attack()&#10;- removed .get_attack()&#10;- added .receive_damage()&#10;- added .melee_attack()&#10;- added ._wpn()&#10;- added .get_armor_class()&#10;- added Crab creature&#10;- added a few more fields to weapon:&#10;  - atk_type: enums.ATTACK, set&#10;  - wield_from: enums.EQUIP_SLOT, single&#10;- added more debug prints buried behind an if name == main block&#10;&#10;&#10;encounter:&#10;- Party.__init__ now converts its args to list, from tuple&#10;- Party.size() added&#10;- Party.__str__() added&#10;- Encounter:&#10;  - .init now copies Party Members rather than directly using&#10;  - .do_battle() now has some text feedback - will remove in time&#10;    - huge rewrite, pretty mch entirely new function&#10;  - .generate_hostile() no involves party size mods, and difficulties&#10;    - also not returns a reward dict - currently exp only&#10;- the simplistic battle routine buried in an if name == main block&#10;&#10;enums:&#10;- changed enums import from * to as misc, related changes throughout&#10;- killed a couple debug prints&#10;- added GENERIC to WEAPONS type&#10;- added EQUIP_SLOT enum&#10;&#10;events:&#10;- entirely new, though no new code, exiled from inside character_sheet&#10;&#10;inventory:&#10;- entirely new, exiled from inside character_sheet&#10;- more internal variables, for more places to put gear&#10;- equip_weapon() now checks for jaw, hands, and fingers slots.&#10;&#10;misc:&#10;- Die.__init__() no longer forces a min value of 2 sides - 1d1 possible&#10;- .random() altered to shortcut if 1 sided.&#10;&#10;weaponry:&#10;- importing ATTACK and EQUIP_SLOT enums&#10;- .__init__() args changed, added atk_type&#10;  -  sets self.atk_type and self.wield_from now as well&#10;- greataxe test def altered to set atk_type and wield_from&#10;&#10;trace:&#10;- entirely new, added to carry any debug related functions worth having&#10;- implemented __LINE__(), which behaves as __FILE__+_+__LINE__ does in C">
      <created>1558495683999</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1558495683999</updated>
    </task>
    <task id="LOCAL-00003" summary="Rudimentary leveling now works&#10;&#10;fixed an issue with creature weapons lacking weapon.flags not having&#10;their attack_die set.&#10;&#10;fixed encounter continuing and calling choice on a party which has &#10;already been eliminated.&#10;&#10;Character_sheet:&#10;- experience now hides behind a getter/setter.  Setter calls levelup&#10;  - levelup handled via re-calling __init__, inserting current stats&#10;- .__init__() modified to check if relevant attributes are None or set,&#10;  if none they are defaulted, if set they are used as is&#10;- ._wpn() now used hand.roll instead of hand.attack_die.roll()&#10;&#10;Classes:&#10;- Barbarian:&#10;  - class_ability is no longer defaulted unless not assigned &#10;  - .__init__() now takes many configuration arguments, to pass in state&#10;    - tests those for None, if None, defaults, else keeps what was passed&#10;&#10;Creatures:&#10;- like with character_sheet, ._wpn() now uses hand.roll()&#10;&#10;encounter:&#10;- Party.__str__() now includes character level in its return&#10;- Encounter.do_battle() now tests for active party internally too&#10;  - immediately after selecting a weapon, but before choosing a target&#10;    fixes trying to choose target from a party with no members&#10;  - removed the per-hit input(), now runs the entire encounter at once.&#10;  - now returns a dict for failure as well rather than just zero&#10;- Encounter.generate_hostile():&#10;  - currently returns exp equal to stated for creatures&#10;    - this is for testing purposes to accelerate growth.  &#10;    - it will not stay this fast&#10;- if name == main:&#10;  - now tests sum of hp for player one and two before terminating.&#10;  - divides the rewards among the players&#10;  - sets their hp to max after each iteration&#10;  &#10;inventory:&#10;- had a case where creatures were not setting flags on their weapons&#10;  - this caused Weapon.equip_weapon() to not assign its attack die&#10;    fixed&#10;&#10;weaponry:&#10;- Weapon.roll() was still using the old .attackDie name, retagged it">
      <created>1558503107098</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1558503107098</updated>
    </task>
    <task id="LOCAL-00004" summary="quick housecleaning update&#10;&#10;character_sheet:&#10;- CharacterSheet now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- .get_attack() is eliminated&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;classes:&#10;- appended background.skills to self.skills&#10;&#10;creatures:&#10;- Creature now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- minor edits to the print statements int he debug block&#10;&#10;&#10;encounter:&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;entity:&#10;- Entity created from common features of Creature and CharacterSheet&#10;&#10;enums:&#10;- BACKGROUND.SKILL renamed to .SKILLS, its a set of multiple, pluralise&#10;&#10;trace:&#10;- new function print()&#10;  - overrides default print function.&#10;  - inserts __LINE__() before given args">
      <created>1558556480240</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1558556480240</updated>
    </task>
    <task id="LOCAL-00005" summary="quick bugfix and update to encounter test code&#10;  Forgot to check target armor class, so no one was ever missing, lol.&#10;&#10;&#10;character_sheet:&#10;- silenced the 'level up' print in CharacterSheet.level_up()&#10;- added level to .dict_short()&#10;&#10;encounter:&#10;- Encounter.init()&#10;  - added verbose, silent, auto_run and debug_rewards parameters&#10;- Encounter.do_battle()&#10;  - wrapped the prints behind tests for verbose and silent&#10;  - wrapped the input that halts iteration behind a test for auto_run&#10;  - killed some old commented code&#10;  - attacks now get target ac, attack rolls less than target ac miss&#10;- XP_thresholds now has 7 difficulty levels&#10;  - each is 2/3 of the next&#10;- test code now runs until level 20 is reached">
      <created>1558562837027</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1558562837027</updated>
    </task>
    <task id="LOCAL-00006" summary="encounter:&#10;- fixed criticals, critical attacks now double damage as planned&#10;&#10;enums:&#10;- added DamageType.__Damage.__mull__()&#10;- added DamageType.__Damage.__imull__()&#10;- added DamageType.__Damage.__rmull__()&#10;&#10;misc:&#10;- attack_roll() now checks critical against roll, was attack_roll">
      <created>1558568331093</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1558568331093</updated>
    </task>
    <task id="LOCAL-00007" summary="a huge milestone was crossed with this update - a preliminary &#10;implementation of the event system is now in place - pending survival...&#10;&#10;Work will now proceed on the remaining class traits for the barbarian &#10;class, barring any issues, this implementation survives as is, otherwise&#10;it is, as ever, subject to obliteration - initial prognosis is promising&#10;&#10;armor:&#10;- Armor.__init__() now is entirely keyword arguments&#10;  - added equip_to argument&#10;- Armor.Shield super call altered to match Armor.__init__&#10;- armor test definition altered accordingly.&#10;&#10;character_sheet:&#10;- added iteration of the traits list to trigger event 'installation'&#10;- CharacterSheet.level_up() is now a looped process&#10;- killed some commented out code&#10;- minor changes to the test code&#10;&#10;encounter:&#10;- Encounter.do_battle():&#10;  - now import enums.EVENT&#10;  - attacks dict replaced with attack object&#10;  - for atk in attacks look replaced with while attack.num&#10;  - misc.attack_roll() replaced with call to attack.result()&#10;  - attack log now indicates when criticals happen&#10;  - added event calls for before_turn, attack, critical, defend, death, &#10;    after_battle, and after_turn&#10;  &#10;entity:&#10;- added Entity.equip() wrapper call for accessing self.equipment&#10;- added Entity.unequip() wrapper call for accessing self.equipment&#10;- stripped attack trigger from Entity.melee_attack()&#10;  - now generates a class object rather than a dictionary&#10; &#10;enums:&#10;- CLASS_TRAITS attributes are not classes anymore, but same named vars&#10;  - assigned functions.ClassTrait&lt;Name&gt; to attaribute &lt;NAME&gt;&#10;- DAMAGE_TYPES now has __add__, __sub__, __div__, &#10;  and respective i and r variants&#10;- ARMOR is now a three tier nested class enumeration&#10;- added EVENT enum with :&#10;  - INIT, EQUIP, UNEQUIP, BEFORE_BATTLE, AFTER_BATTLE, BEFORE_TURN, &#10;    AFTER_TURN, BEFORE_ACTION, AFTER_ACTION, ATTACK, DEFEND, CRITICAL, &#10;    LEVEL_UP, REST_LONG, REST_SHORT, ROLL_ATTACK, ROLL_DAMAGE, ROLL_DC, &#10;    ROLL_HP, DEATH, AND HEAL&#10;  - very likely this will grow considerably.&#10;- if __name__ == '__main__' test block&#10;&#10;events:&#10;- Event.Effect.__call__() doesn't return anything now&#10;- previous limited set of event lists are not class attributes, they are&#10;  now instance attributes, and there are more of them - one for every &#10;  event in enums.EVENT&#10;&#10;functions:&#10;Massive expansion, the bulk of the effort happened here.&#10;- GenericAttack and GenericMelee commented out for now&#10;- full implementation of ClassTraitRage&#10;- preliminary instantiation of the following ClassTrait&lt;Name&gt;:&#10;  - UnarmoredDefence, RecklessAttack, DangerSense, ExtraAttack, &#10;    FastMovement, FeralInstinct, BrutalCritical, RelentlessRage, &#10;    PersistentRage, IndomitableMight, PrimalChampion, Frenzy, &#10;    MindlessRage, IntimidatingPresence, Retaliation, SpiritSeeker, &#10;    SpiritWalker, TotemBear, TotemEagle, TotemWolf, AspectBear, &#10;    AspectEagle, AspectWolf, AttuneBear, AttuneEagle, AttuneWolf&#10;- test code block at bottom behind if __name__ == '__main__':&#10;&#10;inventory:&#10;- Equipped.equip_weapon() now uses attribute equip_to, no wield_from&#10;- .get_equipped() implemented&#10;- .unequip() implemented&#10;- .unequip_slot() implemented&#10;&#10;items:&#10;- Item.__init__() equip_to added to parameters&#10;  - added to self as well&#10; &#10;misc:&#10;- eliminated the Event code - it doesn't need to be in two places&#10;- pushed the Die roll average roll count from 10k, to 1m&#10;- eliminated attack_roll()&#10;- cleaned up the test code outputs&#10;&#10;weaponry:&#10;- converted Weapon.__init__() parameters to named parameters&#10;  - added equip_to to super() call to match changes to Item&#10;  - Weapon no longer stores wield_from, attribute eliminated&#10;  &#10;trace:&#10;- added offset parameter to print overload, enabling selection of which &#10;  context's file_line is printed out.">
      <created>1558790436541</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1558790436542</updated>
    </task>
    <task id="LOCAL-00008" summary="a mixed bug stomping / progress update - there were some serious flaws &#10;in the code for the event system, in particular with identifying &#10;instances of a class and appending instances of a trait as causes of &#10;the effect&#10;&#10;Progress has been made in implementing the barbarian's traits, and some &#10;related needs along the way.&#10;&#10;character_sheet:&#10;- player_race now instantiates a new instance of self at the new level&#10;  rather than carrying the old instance - which prevented gaining traits&#10;- NATURAL_DEFENCE is now a default trait of entities.&#10;- the init() event is thrown at the end of character_sheet.__init__()&#10;- the level_up event is thrown at the end of character_sheet.level_up()&#10;&#10;encounter:&#10;- .do_Battle doesn't import enums.EVENT anymore&#10;- critical attacks now triggers the attacker's critical event&#10;- rewrote how damage is applied to a target&#10;  - effects.defnd now expects 4 keywords:&#10;    - attacker: the attacker's object&#10;    - attack: the attacker's attack object&#10;    - defender: the target of the attack - typically self, but might be&#10;      a party member for defence events relating to party members&#10;    - defence: a defence object to be loaded with the reply   &#10;  - a defence object is created, and passed to the target's defend&#10;    subscribers for updating with damage modifiers, and effects for the&#10;    target to suffer as a consequence (like thorns)&#10;- target.hp &lt; 1 now triggers the target's death event&#10;&#10;entity:&#10;- un-named entities are now given a default name: 'an Entity is No One'&#10;- attributes advantage, disadvantage, damage_resist, damage_vulnerable, &#10;  end proficiency_skills changed from type set() to type &#10;  Event.Effects._none via wrapper function Event.none()&#10;  &#10;enums:&#10;- ABILITY's members now have an affectors attribute - used to list what &#10;  effects have given this effect&#10;- ATTACK's members now have an affectors attribute&#10;- ADVANTAGE's members  ATTACK and DEFENCE are now attributes referencing &#10;  the same named enum classes&#10;- DAMAGE_TYPE:&#10;  - __init__():&#10;    - damage parameter defaults to None&#10;    - affectors attribute added&#10;  - __repr__():&#10;    - now returns class name if it lacks a .damage attribute&#10;  - all member .__init__() funcitons now default damage to None&#10;  &#10;events:&#10;- Event.__repr__() no long imports sys for sys.stdout.flush&#10;  - sys.stdout.flush call removed&#10;  - .get(self, item) implemented - used to find instances of a type &#10;    within the set&#10;  - .__init__() now also setsup lists for heal and _none events.&#10;    - _none is there to allow none event, but similar functioning lists &#10;      to abuse the same code and stay out of the way.&#10;      &#10;functions:&#10;- TraitsBase.__call__() eliminated&#10;- TraitsBase.add_affector(self, what, where) implemented&#10;- TraitsBase.remove_affector(self, what, where) implemented&#10;- TraitNaturalDefence implemented&#10;- ClassTraitRage:&#10;  - .__init__() now calls add_affector to append damage resistances&#10;  - .uninstall() now calls remove_affector to strip damage resistances&#10;  - .equip_change now conditionally calls uninstall rather than always&#10;- ClassTraitUnarmoredDefence implemented&#10;- ClassTraitRecklessAttack implemented&#10;&#10;misc:&#10;- class Defend added for use by defence events&#10;  - currently just assembles a list of armor_class results&#10;  - get_armor_class returns the largest value in the results&#10;- getAdvantage tests changed to account for changes in event system&#10;&#10;trace:&#10;- added line function to get the current line the code is on.">
      <created>1558988870525</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1558988870525</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1056" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Favorites" order="0" side_tool="true" />
      <window_info content_ui="combo" id="Project" order="1" visible="true" weight="0.10063224" />
      <window_info id="Structure" order="2" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Inspection Results" order="0" sideWeight="0.49947312" weight="0.2521645" />
      <window_info anchor="bottom" id="Terminal" order="1" weight="0.32900432" />
      <window_info anchor="bottom" id="Event Log" order="2" sideWeight="0.50052685" side_tool="true" weight="0.3051948" />
      <window_info anchor="bottom" id="Python Console" order="3" weight="0.32900432" />
      <window_info anchor="bottom" id="Message" order="4" />
      <window_info anchor="bottom" id="Find" order="5" />
      <window_info active="true" anchor="bottom" id="Run" order="6" sideWeight="0.49947312" visible="true" weight="0.42099568" />
      <window_info anchor="bottom" id="Version Control" order="7" sideWeight="0.49947312" weight="0.32900432" />
      <window_info anchor="bottom" id="Debug" order="8" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="9" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="10" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="11" weight="0.08766234" />
      <window_info anchor="bottom" id="Metrics" order="12" weight="0.08874459" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.14285715" />
    </layout>
    <layout-to-restore>
      <window_info id="Favorites" order="0" side_tool="true" />
      <window_info active="true" content_ui="combo" id="Project" order="1" visible="true" weight="0.11940298" />
      <window_info id="Structure" order="2" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Inspection Results" order="0" sideWeight="0.49947312" weight="0.2521645" />
      <window_info anchor="bottom" id="Terminal" order="1" weight="0.32900432" />
      <window_info anchor="bottom" id="Event Log" order="2" sideWeight="0.50052685" side_tool="true" weight="0.3051948" />
      <window_info anchor="bottom" id="Python Console" order="3" weight="0.32900432" />
      <window_info anchor="bottom" id="Message" order="4" />
      <window_info anchor="bottom" id="Find" order="5" />
      <window_info anchor="bottom" id="Run" order="6" sideWeight="0.49947312" visible="true" weight="0.16450216" />
      <window_info anchor="bottom" id="Version Control" order="7" sideWeight="0.49947312" weight="0.32900432" />
      <window_info anchor="bottom" id="Debug" order="8" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="9" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="10" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="11" weight="0.08766234" />
      <window_info anchor="bottom" id="Metrics" order="12" weight="0.08874459" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.14285715" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list />
          </value>
        </entry>
        <entry key="User">
          <value>
            <list />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_NEW_TODO" value="false" />
    <option name="SHOW_DIRTY_RECURSIVELY" value="true" />
    <option name="FORCE_NON_EMPTY_COMMENT" value="true" />
    <MESSAGE value="character_classes.py&#10;    renamed weaponry.attackDie to attack_die&#10;    renamed CharacterSheet.__repr__ to full_str&#10;    implemented characterSheet.melee_attack(self)&#10;        - runs over equipped weapons, returns a dict with:&#10;            - num: the number of attacks the character makes&#10;            - effects: the effects to be applied to the attacked target&#10;            - calculation: a damage function for the weapon:&#10;                - this is to include character/class/race relevant bonus&#10;            - weapons: the weaponry involved:&#10;                - conveys the damage effects, and weapon attack function&#10;        soon to make a similar variant for creature, given its somewhat &#10;        more limited complexity&#10;    wrapped some testing/debug behind if name==main block&#10;creatures.py:&#10;    nothing important, just killed some whitespace&#10;encounter.py:&#10;    further work towards implementing do_battle()&#10;enums.py:&#10;    changed DAMAGETYPE subclasses to take arguments&#10;        - can now instantiate self with given damage value &#10;    a couple debug outs I haven't murdered yet.&#10;functions.py:&#10;    dtypes no longer passed to GenericMelee.__init__()&#10;    dtypes no longer a self value of GenericMelee.__init__()&#10;        - contained within the weapon itself, &#10;          or applied by its attack function, not needed here.&#10;misc.py:&#10;    implemented a wrapper to call random as Die.random(self, upper) &#10;    wrapped some testing/debug behind if name==main block&#10;weaponry.py:&#10;    as mentioned in character_classes, renamed .attackDie to .attack_die&#10;    renamed equipFuntion to equip_function" />
    <MESSAGE value="Simple Melee combat at last!&#10;&#10;its come a long way, and it finally meets milestone 1, I can init a&#10;player, and some creatures, and they can try to kill eachother.&#10;&#10;renamed the file character_classes to character_sheet&#10;&#10;character_sheet:&#10;- moved init_wulfgar function to the end, so its out of the way&#10;- pushed the Equipment class out to its own file&#10;- pushed the events class out to its own file&#10;- added .is_lucky()&#10;- added .get_next_level_xp()&#10;- finished reworking get_attack&#10;- pushed __LINE__ debug function to its own file&#10;&#10;classes:&#10;- removed the hitpoints_lvl1, its set under character_sheet with hit_die&#10;&#10;creatures:&#10;- retagged the alias for dnd5e_weaponry to weaponry as I do elsewhere&#10;- gave creatures the equipment class, so they use same methods as player&#10;- changes default (dis)advantage vars to set() from None&#10;- added .atk_bonus and .effects vars&#10;- removed .check_attack()&#10;- removed .get_attack()&#10;- added .receive_damage()&#10;- added .melee_attack()&#10;- added ._wpn()&#10;- added .get_armor_class()&#10;- added Crab creature&#10;- added a few more fields to weapon:&#10;  - atk_type: enums.ATTACK, set&#10;  - wield_from: enums.EQUIP_SLOT, single&#10;- added more debug prints buried behind an if name == main block&#10;&#10;&#10;encounter:&#10;- Party.__init__ now converts its args to list, from tuple&#10;- Party.size() added&#10;- Party.__str__() added&#10;- Encounter:&#10;  - .init now copies Party Members rather than directly using&#10;  - .do_battle() now has some text feedback - will remove in time&#10;    - huge rewrite, pretty mch entirely new function&#10;  - .generate_hostile() no involves party size mods, and difficulties&#10;    - also not returns a reward dict - currently exp only&#10;- the simplistic battle routine buried in an if name == main block&#10;&#10;enums:&#10;- changed enums import from * to as misc, related changes throughout&#10;- killed a couple debug prints&#10;- added GENERIC to WEAPONS type&#10;- added EQUIP_SLOT enum&#10;&#10;events:&#10;- entirely new, though no new code, exiled from inside character_sheet&#10;&#10;inventory:&#10;- entirely new, exiled from inside character_sheet&#10;- more internal variables, for more places to put gear&#10;- equip_weapon() now checks for jaw, hands, and fingers slots.&#10;&#10;misc:&#10;- Die.__init__() no longer forces a min value of 2 sides - 1d1 possible&#10;- .random() altered to shortcut if 1 sided.&#10;&#10;weaponry:&#10;- importing ATTACK and EQUIP_SLOT enums&#10;- .__init__() args changed, added atk_type&#10;  -  sets self.atk_type and self.wield_from now as well&#10;- greataxe test def altered to set atk_type and wield_from&#10;&#10;trace:&#10;- entirely new, added to carry any debug related functions worth having&#10;- implemented __LINE__(), which behaves as __FILE__+_+__LINE__ does in C" />
    <MESSAGE value="Rudimentary leveling now works&#10;&#10;fixed an issue with creature weapons lacking weapon.flags not having&#10;their attack_die set.&#10;&#10;fixed encounter continuing and calling choice on a party which has &#10;already been eliminated.&#10;&#10;Character_sheet:&#10;- experience now hides behind a getter/setter.  Setter calls levelup&#10;  - levelup handled via re-calling __init__, inserting current stats&#10;- .__init__() modified to check if relevant attributes are None or set,&#10;  if none they are defaulted, if set they are used as is&#10;- ._wpn() now used hand.roll instead of hand.attack_die.roll()&#10;&#10;Classes:&#10;- Barbarian:&#10;  - class_ability is no longer defaulted unless not assigned &#10;  - .__init__() now takes many configuration arguments, to pass in state&#10;    - tests those for None, if None, defaults, else keeps what was passed&#10;&#10;Creatures:&#10;- like with character_sheet, ._wpn() now uses hand.roll()&#10;&#10;encounter:&#10;- Party.__str__() now includes character level in its return&#10;- Encounter.do_battle() now tests for active party internally too&#10;  - immediately after selecting a weapon, but before choosing a target&#10;    fixes trying to choose target from a party with no members&#10;  - removed the per-hit input(), now runs the entire encounter at once.&#10;  - now returns a dict for failure as well rather than just zero&#10;- Encounter.generate_hostile():&#10;  - currently returns exp equal to stated for creatures&#10;    - this is for testing purposes to accelerate growth.  &#10;    - it will not stay this fast&#10;- if name == main:&#10;  - now tests sum of hp for player one and two before terminating.&#10;  - divides the rewards among the players&#10;  - sets their hp to max after each iteration&#10;  &#10;inventory:&#10;- had a case where creatures were not setting flags on their weapons&#10;  - this caused Weapon.equip_weapon() to not assign its attack die&#10;    fixed&#10;&#10;weaponry:&#10;- Weapon.roll() was still using the old .attackDie name, retagged it" />
    <MESSAGE value="quick housecleaning update&#10;&#10;character_sheet:&#10;- CharacterSheet now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- .get_attack() is eliminated&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;classes:&#10;- appended background.skills to self.skills&#10;&#10;creatures:&#10;- Creature now inherits from common Entity class&#10;  - re-organised and stripped some variables that Entity now owns&#10;- .set_saving_throws() now belongs to Entity&#10;- .is_lucky() now belongs to Entity&#10;- .melee_attack() now belongs to Entity&#10;- ._wpn() now belongs to Entity&#10;- receive_damage() now belongs to entity&#10;- minor edits to the print statements int he debug block&#10;&#10;&#10;encounter:&#10;- debug block now import print from trace&#10;  - minor edits to the print statements to reflect change&#10;&#10;entity:&#10;- Entity created from common features of Creature and CharacterSheet&#10;&#10;enums:&#10;- BACKGROUND.SKILL renamed to .SKILLS, its a set of multiple, pluralise&#10;&#10;trace:&#10;- new function print()&#10;  - overrides default print function.&#10;  - inserts __LINE__() before given args" />
    <MESSAGE value="quick bugfix and update to encounter test code&#10;  Forgot to check target armor class, so no one was ever missing, lol.&#10;&#10;&#10;character_sheet:&#10;- silenced the 'level up' print in CharacterSheet.level_up()&#10;- added level to .dict_short()&#10;&#10;encounter:&#10;- Encounter.init()&#10;  - added verbose, silent, auto_run and debug_rewards parameters&#10;- Encounter.do_battle()&#10;  - wrapped the prints behind tests for verbose and silent&#10;  - wrapped the input that halts iteration behind a test for auto_run&#10;  - killed some old commented code&#10;  - attacks now get target ac, attack rolls less than target ac miss&#10;- XP_thresholds now has 7 difficulty levels&#10;  - each is 2/3 of the next&#10;- test code now runs until level 20 is reached" />
    <MESSAGE value="encounter:&#10;- fixed criticals, critical attacks now double damage as planned&#10;&#10;enums:&#10;- added DamageType.__Damage.__mull__()&#10;- added DamageType.__Damage.__imull__()&#10;- added DamageType.__Damage.__rmull__()&#10;&#10;misc:&#10;- attack_roll() now checks critical against roll, was attack_roll" />
    <MESSAGE value="a huge milestone was crossed with this update - a preliminary &#10;implementation of the event system is now in place - pending survival...&#10;&#10;Work will now proceed on the remaining class traits for the barbarian &#10;class, barring any issues, this implementation survives as is, otherwise&#10;it is, as ever, subject to obliteration - initial prognosis is promising&#10;&#10;armor:&#10;- Armor.__init__() now is entirely keyword arguments&#10;  - added equip_to argument&#10;- Armor.Shield super call altered to match Armor.__init__&#10;- armor test definition altered accordingly.&#10;&#10;character_sheet:&#10;- added iteration of the traits list to trigger event 'installation'&#10;- CharacterSheet.level_up() is now a looped process&#10;- killed some commented out code&#10;- minor changes to the test code&#10;&#10;encounter:&#10;- Encounter.do_battle():&#10;  - now import enums.EVENT&#10;  - attacks dict replaced with attack object&#10;  - for atk in attacks look replaced with while attack.num&#10;  - misc.attack_roll() replaced with call to attack.result()&#10;  - attack log now indicates when criticals happen&#10;  - added event calls for before_turn, attack, critical, defend, death, &#10;    after_battle, and after_turn&#10;  &#10;entity:&#10;- added Entity.equip() wrapper call for accessing self.equipment&#10;- added Entity.unequip() wrapper call for accessing self.equipment&#10;- stripped attack trigger from Entity.melee_attack()&#10;  - now generates a class object rather than a dictionary&#10; &#10;enums:&#10;- CLASS_TRAITS attributes are not classes anymore, but same named vars&#10;  - assigned functions.ClassTrait&lt;Name&gt; to attaribute &lt;NAME&gt;&#10;- DAMAGE_TYPES now has __add__, __sub__, __div__, &#10;  and respective i and r variants&#10;- ARMOR is now a three tier nested class enumeration&#10;- added EVENT enum with :&#10;  - INIT, EQUIP, UNEQUIP, BEFORE_BATTLE, AFTER_BATTLE, BEFORE_TURN, &#10;    AFTER_TURN, BEFORE_ACTION, AFTER_ACTION, ATTACK, DEFEND, CRITICAL, &#10;    LEVEL_UP, REST_LONG, REST_SHORT, ROLL_ATTACK, ROLL_DAMAGE, ROLL_DC, &#10;    ROLL_HP, DEATH, AND HEAL&#10;  - very likely this will grow considerably.&#10;- if __name__ == '__main__' test block&#10;&#10;events:&#10;- Event.Effect.__call__() doesn't return anything now&#10;- previous limited set of event lists are not class attributes, they are&#10;  now instance attributes, and there are more of them - one for every &#10;  event in enums.EVENT&#10;&#10;functions:&#10;Massive expansion, the bulk of the effort happened here.&#10;- GenericAttack and GenericMelee commented out for now&#10;- full implementation of ClassTraitRage&#10;- preliminary instantiation of the following ClassTrait&lt;Name&gt;:&#10;  - UnarmoredDefence, RecklessAttack, DangerSense, ExtraAttack, &#10;    FastMovement, FeralInstinct, BrutalCritical, RelentlessRage, &#10;    PersistentRage, IndomitableMight, PrimalChampion, Frenzy, &#10;    MindlessRage, IntimidatingPresence, Retaliation, SpiritSeeker, &#10;    SpiritWalker, TotemBear, TotemEagle, TotemWolf, AspectBear, &#10;    AspectEagle, AspectWolf, AttuneBear, AttuneEagle, AttuneWolf&#10;- test code block at bottom behind if __name__ == '__main__':&#10;&#10;inventory:&#10;- Equipped.equip_weapon() now uses attribute equip_to, no wield_from&#10;- .get_equipped() implemented&#10;- .unequip() implemented&#10;- .unequip_slot() implemented&#10;&#10;items:&#10;- Item.__init__() equip_to added to parameters&#10;  - added to self as well&#10; &#10;misc:&#10;- eliminated the Event code - it doesn't need to be in two places&#10;- pushed the Die roll average roll count from 10k, to 1m&#10;- eliminated attack_roll()&#10;- cleaned up the test code outputs&#10;&#10;weaponry:&#10;- converted Weapon.__init__() parameters to named parameters&#10;  - added equip_to to super() call to match changes to Item&#10;  - Weapon no longer stores wield_from, attribute eliminated&#10;  &#10;trace:&#10;- added offset parameter to print overload, enabling selection of which &#10;  context's file_line is printed out." />
    <MESSAGE value="a mixed bug stomping / progress update - there were some serious flaws &#10;in the code for the event system, in particular with identifying &#10;instances of a class and appending instances of a trait as causes of &#10;the effect&#10;&#10;Progress has been made in implementing the barbarian's traits, and some &#10;related needs along the way.&#10;&#10;character_sheet:&#10;- player_race now instantiates a new instance of self at the new level&#10;  rather than carrying the old instance - which prevented gaining traits&#10;- NATURAL_DEFENCE is now a default trait of entities.&#10;- the init() event is thrown at the end of character_sheet.__init__()&#10;- the level_up event is thrown at the end of character_sheet.level_up()&#10;&#10;encounter:&#10;- .do_Battle doesn't import enums.EVENT anymore&#10;- critical attacks now triggers the attacker's critical event&#10;- rewrote how damage is applied to a target&#10;  - effects.defnd now expects 4 keywords:&#10;    - attacker: the attacker's object&#10;    - attack: the attacker's attack object&#10;    - defender: the target of the attack - typically self, but might be&#10;      a party member for defence events relating to party members&#10;    - defence: a defence object to be loaded with the reply   &#10;  - a defence object is created, and passed to the target's defend&#10;    subscribers for updating with damage modifiers, and effects for the&#10;    target to suffer as a consequence (like thorns)&#10;- target.hp &lt; 1 now triggers the target's death event&#10;&#10;entity:&#10;- un-named entities are now given a default name: 'an Entity is No One'&#10;- attributes advantage, disadvantage, damage_resist, damage_vulnerable, &#10;  end proficiency_skills changed from type set() to type &#10;  Event.Effects._none via wrapper function Event.none()&#10;  &#10;enums:&#10;- ABILITY's members now have an affectors attribute - used to list what &#10;  effects have given this effect&#10;- ATTACK's members now have an affectors attribute&#10;- ADVANTAGE's members  ATTACK and DEFENCE are now attributes referencing &#10;  the same named enum classes&#10;- DAMAGE_TYPE:&#10;  - __init__():&#10;    - damage parameter defaults to None&#10;    - affectors attribute added&#10;  - __repr__():&#10;    - now returns class name if it lacks a .damage attribute&#10;  - all member .__init__() funcitons now default damage to None&#10;  &#10;events:&#10;- Event.__repr__() no long imports sys for sys.stdout.flush&#10;  - sys.stdout.flush call removed&#10;  - .get(self, item) implemented - used to find instances of a type &#10;    within the set&#10;  - .__init__() now also setsup lists for heal and _none events.&#10;    - _none is there to allow none event, but similar functioning lists &#10;      to abuse the same code and stay out of the way.&#10;      &#10;functions:&#10;- TraitsBase.__call__() eliminated&#10;- TraitsBase.add_affector(self, what, where) implemented&#10;- TraitsBase.remove_affector(self, what, where) implemented&#10;- TraitNaturalDefence implemented&#10;- ClassTraitRage:&#10;  - .__init__() now calls add_affector to append damage resistances&#10;  - .uninstall() now calls remove_affector to strip damage resistances&#10;  - .equip_change now conditionally calls uninstall rather than always&#10;- ClassTraitUnarmoredDefence implemented&#10;- ClassTraitRecklessAttack implemented&#10;&#10;misc:&#10;- class Defend added for use by defence events&#10;  - currently just assembles a list of armor_class results&#10;  - get_armor_class returns the largest value in the results&#10;- getAdvantage tests changed to account for changes in event system&#10;&#10;trace:&#10;- added line function to get the current line the code is on." />
    <option name="LAST_COMMIT_MESSAGE" value="a mixed bug stomping / progress update - there were some serious flaws &#10;in the code for the event system, in particular with identifying &#10;instances of a class and appending instances of a trait as causes of &#10;the effect&#10;&#10;Progress has been made in implementing the barbarian's traits, and some &#10;related needs along the way.&#10;&#10;character_sheet:&#10;- player_race now instantiates a new instance of self at the new level&#10;  rather than carrying the old instance - which prevented gaining traits&#10;- NATURAL_DEFENCE is now a default trait of entities.&#10;- the init() event is thrown at the end of character_sheet.__init__()&#10;- the level_up event is thrown at the end of character_sheet.level_up()&#10;&#10;encounter:&#10;- .do_Battle doesn't import enums.EVENT anymore&#10;- critical attacks now triggers the attacker's critical event&#10;- rewrote how damage is applied to a target&#10;  - effects.defnd now expects 4 keywords:&#10;    - attacker: the attacker's object&#10;    - attack: the attacker's attack object&#10;    - defender: the target of the attack - typically self, but might be&#10;      a party member for defence events relating to party members&#10;    - defence: a defence object to be loaded with the reply   &#10;  - a defence object is created, and passed to the target's defend&#10;    subscribers for updating with damage modifiers, and effects for the&#10;    target to suffer as a consequence (like thorns)&#10;- target.hp &lt; 1 now triggers the target's death event&#10;&#10;entity:&#10;- un-named entities are now given a default name: 'an Entity is No One'&#10;- attributes advantage, disadvantage, damage_resist, damage_vulnerable, &#10;  end proficiency_skills changed from type set() to type &#10;  Event.Effects._none via wrapper function Event.none()&#10;  &#10;enums:&#10;- ABILITY's members now have an affectors attribute - used to list what &#10;  effects have given this effect&#10;- ATTACK's members now have an affectors attribute&#10;- ADVANTAGE's members  ATTACK and DEFENCE are now attributes referencing &#10;  the same named enum classes&#10;- DAMAGE_TYPE:&#10;  - __init__():&#10;    - damage parameter defaults to None&#10;    - affectors attribute added&#10;  - __repr__():&#10;    - now returns class name if it lacks a .damage attribute&#10;  - all member .__init__() funcitons now default damage to None&#10;  &#10;events:&#10;- Event.__repr__() no long imports sys for sys.stdout.flush&#10;  - sys.stdout.flush call removed&#10;  - .get(self, item) implemented - used to find instances of a type &#10;    within the set&#10;  - .__init__() now also setsup lists for heal and _none events.&#10;    - _none is there to allow none event, but similar functioning lists &#10;      to abuse the same code and stay out of the way.&#10;      &#10;functions:&#10;- TraitsBase.__call__() eliminated&#10;- TraitsBase.add_affector(self, what, where) implemented&#10;- TraitsBase.remove_affector(self, what, where) implemented&#10;- TraitNaturalDefence implemented&#10;- ClassTraitRage:&#10;  - .__init__() now calls add_affector to append damage resistances&#10;  - .uninstall() now calls remove_affector to strip damage resistances&#10;  - .equip_change now conditionally calls uninstall rather than always&#10;- ClassTraitUnarmoredDefence implemented&#10;- ClassTraitRecklessAttack implemented&#10;&#10;misc:&#10;- class Defend added for use by defence events&#10;  - currently just assembles a list of armor_class results&#10;  - get_armor_class returns the largest value in the results&#10;- getAdvantage tests changed to account for changes in event system&#10;&#10;trace:&#10;- added line function to get the current line the code is on." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/dnd5e_inventory.py</url>
          <line>10</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/dnd5e_status_effects.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="507">
          <caret line="39" column="25" selection-start-line="39" selection-start-column="25" selection-end-line="39" selection-end-column="25" />
          <folding>
            <element signature="e#0#13#0" expanded="true" />
            <element signature="e#1280#1325#0" expanded="true" />
            <element signature="e#1338#1586#0" expanded="true" />
            <element signature="e#3612#3868#0" expanded="true" />
            <element signature="e#2023#2072#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/enum.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="214">
          <caret line="346" lean-forward="true" selection-start-line="346" selection-end-line="346" />
          <folding>
            <element signature="e#13594#14106#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/json/encoder.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="201">
          <caret line="256" selection-start-line="256" selection-end-line="256" />
          <folding>
            <element signature="e#5744#6489#0" expanded="true" />
            <element signature="e#6395#6488#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/json/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="209">
          <caret line="230" selection-start-line="230" selection-end-line="230" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/encounter.py" />
    <entry file="file://$PROJECT_DIR$/dnd5e.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="338">
          <caret line="26" column="20" lean-forward="true" selection-start-line="26" selection-start-column="20" selection-end-line="26" selection-end-column="20" />
          <folding>
            <element signature="e#0#13#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/AppData/Local/Programs/Python/Python37/Lib/random.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="209">
          <caret line="260" selection-start-line="260" selection-end-line="260" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_creatures.py">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="27" lean-forward="true" selection-start-column="27" selection-end-column="27" />
          <folding>
            <element signature="e#758#2275#0" expanded="true" />
            <element signature="e#2169#2377#0" expanded="true" />
            <element signature="e#2176#2377#0" expanded="true" />
            <element signature="e#5274#5607#0" expanded="true" />
            <element signature="e#5689#8222#0" expanded="true" />
            <element signature="e#8314#10859#0" expanded="true" />
            <element signature="e#10943#13092#0" expanded="true" />
            <element signature="e#13175#15342#0" expanded="true" />
            <element signature="e#15434#18220#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_items.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="117">
          <caret line="9" column="60" selection-start-line="9" selection-start-column="60" selection-end-line="9" selection-end-column="60" />
          <folding>
            <element signature="e#450#603#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_races.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="456">
          <caret line="71" column="23" lean-forward="true" selection-start-line="71" selection-start-column="23" selection-end-line="71" selection-end-column="23" />
          <folding>
            <element signature="e#548#811#0" expanded="true" />
            <element signature="e#1035#1122#0" expanded="true" />
            <element signature="e#1761#1873#0" expanded="true" />
            <element signature="e#2033#2169#0" expanded="true" />
            <element signature="e#3842#3893#0" expanded="true" />
            <element signature="e#4082#4132#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_weaponry.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="26">
          <caret line="2" column="64" selection-start-line="2" selection-start-column="58" selection-end-line="2" selection-end-column="64" />
          <folding>
            <element signature="e#1265#2608#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_misc.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="793">
          <caret line="82" selection-start-line="82" selection-end-line="82" />
          <folding>
            <element signature="e#0#13#0" expanded="true" />
            <element signature="e#542#621#0" expanded="true" />
            <element signature="e#2050#2407#0" expanded="true" />
            <element signature="e#2405#2484#0" expanded="true" />
            <element signature="e#2552#2588#0" expanded="true" />
            <element signature="e#2593#2963#0" expanded="true" />
            <element signature="e#3726#4603#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_entity.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="72" column="75" lean-forward="true" selection-start-line="72" selection-start-column="75" selection-end-line="72" selection-end-column="75" />
          <folding>
            <element signature="e#88#135#0" expanded="true" />
            <element signature="e#516#2654#0" expanded="true" />
            <element signature="e#3202#3267#0" expanded="true" />
            <element signature="e#6207#6403#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_character_sheet.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="170">
          <caret line="251" lean-forward="true" selection-start-line="251" selection-end-line="251" />
          <folding>
            <element signature="e#0#27#0" expanded="true" />
            <element signature="e#654#2787#0" expanded="true" />
            <element signature="e#3061#3887#0" expanded="true" />
            <element signature="e#4487#6856#0" expanded="true" />
            <element signature="e#7282#8691#0" expanded="true" />
            <element signature="e#8745#9992#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Desktop/missile.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="143">
          <caret line="27" lean-forward="true" selection-start-line="27" selection-end-line="27" />
          <folding>
            <element signature="e#0#37#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_armor.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="221">
          <caret line="17" selection-start-line="17" selection-end-line="17" />
          <folding>
            <element signature="e#0#27#0" expanded="true" />
            <element signature="e#1087#1427#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/trace.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="151">
          <caret line="27" lean-forward="true" selection-start-line="27" selection-end-line="27" />
          <folding>
            <element signature="e#0#39#0" expanded="true" />
            <element signature="e#258#350#0" expanded="true" />
            <element signature="e#376#645#0" expanded="true" />
            <element signature="e#733#861#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_enums.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="356">
          <caret line="273" lean-forward="true" selection-start-line="273" selection-end-line="273" />
          <folding>
            <element signature="e#0#25#0" expanded="true" />
            <element signature="e#451#700#0" expanded="true" />
            <element signature="e#795#814#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_classes.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="825">
          <caret line="94" column="42" lean-forward="true" selection-start-line="94" selection-start-column="42" selection-end-line="94" selection-end-column="42" />
          <folding>
            <element signature="e#0#25#0" expanded="true" />
            <element signature="e#1301#1511#0" expanded="true" />
            <element signature="e#1729#1879#0" expanded="true" />
            <element signature="e#1940#2062#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_inventory.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="377">
          <caret line="40" column="47" lean-forward="true" selection-start-line="40" selection-start-column="47" selection-end-line="40" selection-end-column="47" />
          <folding>
            <element signature="e#0#33#0" expanded="true" />
            <element signature="e#238#584#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_events.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-141">
          <caret line="75" selection-start-line="75" selection-end-line="75" />
          <folding>
            <element signature="e#0#9#0" expanded="true" />
            <element signature="e#1973#3041#0" expanded="true" />
            <element signature="e#2064#2150#0" expanded="true" />
            <element signature="e#2542#2559#0" expanded="true" />
            <element signature="e#2709#4052#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_functions.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="396">
          <caret line="138" column="32" lean-forward="true" selection-start-line="138" selection-start-column="32" selection-end-line="138" selection-end-column="32" />
          <folding>
            <element signature="e#240#267#0" expanded="true" />
            <element signature="e#2454#2768#0" expanded="true" />
            <element signature="e#2743#3292#0" expanded="true" />
            <element signature="e#2757#2958#0" expanded="true" />
            <element signature="e#3328#3709#0" expanded="true" />
            <element signature="e#3760#4535#0" expanded="true" />
            <element signature="e#4074#4705#0" expanded="true" />
            <element signature="e#6845#6890#0" expanded="true" />
            <element signature="e#6477#6556#0" expanded="true" />
            <element signature="e#7121#7223#0" expanded="true" />
            <element signature="e#7273#7496#0" expanded="true" />
            <element signature="e#5698#6156#0" expanded="true" />
            <element signature="e#7831#7882#0" expanded="true" />
            <element signature="e#7104#7190#0" expanded="true" />
            <element signature="e#9292#9847#0" expanded="true" />
            <element signature="e#3671#3875#0" expanded="true" />
            <element signature="e#3915#4010#0" expanded="true" />
            <element signature="e#8571#8674#0" expanded="true" />
            <element signature="e#10733#11393#0" expanded="true" />
            <element signature="e#7474#7548#0" expanded="true" />
            <element signature="e#7492#7692#0" expanded="true" />
            <element signature="e#11509#12127#0" expanded="true" />
            <element signature="e#12227#13351#0" expanded="true" />
            <element signature="e#8991#9010#0" expanded="true" />
            <element signature="e#9054#9191#0" expanded="true" />
            <element signature="e#9976#10162#0" expanded="true" />
            <element signature="e#10251#10358#0" expanded="true" />
            <element signature="e#13119#13200#0" expanded="true" />
            <element signature="e#10863#10874#0" expanded="true" />
            <element signature="e#13070#13386#0" expanded="true" />
            <element signature="e#13995#14059#0" expanded="true" />
            <element signature="e#14113#14207#0" expanded="true" />
            <element signature="e#14327#14531#0" expanded="true" />
            <element signature="e#14518#14918#0" expanded="true" />
            <element signature="e#14978#15106#0" expanded="true" />
            <element signature="e#16811#17560#0" expanded="true" />
            <element signature="e#15526#15559#0" expanded="true" />
            <element signature="e#15614#15704#0" expanded="true" />
            <element signature="e#15922#16028#0" expanded="true" />
            <element signature="e#18186#18904#0" expanded="true" />
            <element signature="e#16796#16996#0" expanded="true" />
            <element signature="e#17050#17163#0" expanded="true" />
            <element signature="e#17259#17312#0" expanded="true" />
            <element signature="e#17833#17994#0" expanded="true" />
            <element signature="e#20348#20381#0" expanded="true" />
            <element signature="e#20415#20453#0" expanded="true" />
            <element signature="e#20502#20535#0" expanded="true" />
            <element signature="e#20605#20806#0" expanded="true" />
            <element signature="e#20589#20624#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dnd5e_encounter.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="370">
          <caret line="305" column="102" selection-start-line="305" selection-start-column="102" selection-end-line="305" selection-end-column="102" />
          <folding>
            <element signature="e#36#77#0" expanded="true" />
            <element signature="e#208#233#0" expanded="true" />
            <element signature="e#263#308#0" expanded="true" />
            <element signature="e#1319#1794#0" expanded="true" />
            <element signature="e#1829#9244#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>